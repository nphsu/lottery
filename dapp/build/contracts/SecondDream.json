{
  "contractName": "SecondDream",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getRevealCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getIntroducedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBlocktime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getSeedIndex",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTerm",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "uint256"
        },
        {
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getNonSelectableNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "nextGame",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        }
      ],
      "name": "createCommitment",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timepolling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "nextTerm",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "uint256"
        },
        {
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getSelectableNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "num",
          "type": "uint256"
        }
      ],
      "name": "setTicketTotal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWinner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBuyCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        }
      ],
      "name": "reveal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "drawWinner",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getNumbersOnRevealTerm",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        },
        {
          "name": "_introducer",
          "type": "address"
        }
      ],
      "name": "buyWithIntroducer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getNumbersOnBuyTerm",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "ticketTotal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "player",
          "type": "address"
        }
      ],
      "name": "Challenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "challenge",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getApplicants",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "drawSecondDreamWinner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getRevealCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getIntroducedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlocktime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getSeedIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getNonSelectableNumbers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"nextGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getApplicants\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"}],\"name\":\"createCommitment\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"timepolling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"nextTerm\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getSelectableNumbers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setTicketTotal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBuyCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drawSecondDreamWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drawWinner\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getNumbersOnRevealTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"challenge\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"},{\"name\":\"_introducer\",\"type\":\"address\"}],\"name\":\"buyWithIntroducer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getNumbersOnBuyTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ticketTotal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"buy(uint256,uint256)\":{\"params\":{\"_num\":\"The ticket number (0-4999)\",\"_passcode\":\"This is necessary to create random (1000-9999)\"}},\"buyWithIntroducer(uint256,uint256,address)\":{\"params\":{\"_num\":\"The ticket number (0-4999)\",\"_passcode\":\"This is necessary to create random (1000-9999)\"}},\"getNonSelectableNumbers(uint256,uint256)\":{\"params\":{\"_from\":\"more than equals\",\"_to\":\"less than equals\"}},\"getSelectableNumbers(uint256,uint256)\":{\"params\":{\"_from\":\"more than equals\",\"_to\":\"less than equals\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"buy(uint256,uint256)\":{\"notice\":\"A player can buy a ticket but the process still not be end\"},\"buyWithIntroducer(uint256,uint256,address)\":{\"notice\":\"A player can buy a ticket with introducer address\"},\"challenge()\":{\"notice\":\"It doesn't decide who is winner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol\":\"SecondDream\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/DreamTicket.sol\":{\"keccak256\":\"0x957dbde022be45ea4d6a5c5e4eb84c2a0e5e31712a8d6fad8da849e6c872105d\",\"urls\":[\"bzzr://04d67848b0b4b1706c416dc68446dd97b1b4098eca2fdebfeb45410692f320cb\"]},\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/Ownable.sol\":{\"keccak256\":\"0xba01d97b2e93b0dbce9f3392a7e7dcb63067ba6abfa4b8b6d938804741055ca2\",\"urls\":[\"bzzr://6941b88e081dd5be6d9bd23da010a3dae9a56eeba7c015fa986ef386b3cc1ba2\"]},\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol\":{\"keccak256\":\"0x01f69af3feb13b9a600357bac18886183368e7ebf4cb37cf4d6f8062806e3e8b\",\"urls\":[\"bzzr://54c32adf42f34f9de7dc0a7893506e7ff9719c6574ee728b1ae8fe16a04f6e41\"]}},\"version\":1}",
  "bytecode": "0x608060405266038d7ea4c6800060015562127500600355620d2f0060045534801561002957600080fd5b506040516020806126808339810180604052602081101561004957600080fd5b810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806002819055506000600b8190555061013d610144640100000000026401000000009004565b50506101d0565b600b600081548092919060010191905055506000429050600060056000600b54815260200190815260200160002081905550600354810160066000600b548152602001908152602001600020819055506004548101600d6000600b548152602001908152602001600020819055506000600c6000600b5481526020019081526020016000208190555050565b6124a1806101df6000396000f3fe608060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063020c6fed1461019b57806303652dea146101c65780630501b79f1461022b57806305eaf6d514610256578063124b65b41461026d5780631ab04352146102a6578063281d62c414610340578063455772d214610357578063676e2680146103c35780636f9fb98a1461043c578063715018a61461046757806376179ae41461047e57806381dda9fa14610495578063871933e2146104ac5780638950ce0b146105465780638da5cb5b146105815780638e7ea5b2146105d85780638f10fd451461062f5780638f32d59b1461065a57806391b7f5ed146106895780639348cef7146106c457806398d5fdca146107095780639f8743f714610734578063a111ece71461075f578063b2185bb114610776578063b93f9b0a14610780578063cd91b030146107fb578063d2ef7398146108a1578063d6febde8146108ab578063ed150e78146108e3578063f2fde38b1461093b578063f4ff66711461098c575b600080fd5b3480156101a757600080fd5b506101b0610a32565b6040518082815260200191505060405180910390f35b3480156101d257600080fd5b50610215600480360360208110156101e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4f565b6040518082815260200191505060405180910390f35b34801561023757600080fd5b50610240610a98565b6040518082815260200191505060405180910390f35b34801561026257600080fd5b5061026b610aa0565b005b34801561027957600080fd5b50610282610b61565b6040518082600281111561029257fe5b60ff16815260200191505060405180910390f35b3480156102b257600080fd5b506102e9600480360360408110156102c957600080fd5b810190808035906020019092919080359060200190929190505050610b78565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561032c578082015181840152602081019050610311565b505050509050019250505060405180910390f35b34801561034c57600080fd5b50610355610cca565b005b34801561036357600080fd5b5061036c610d35565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103af578082015181840152602081019050610394565b505050509050019250505060405180910390f35b3480156103cf57600080fd5b50610426600480360360608110156103e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610dd6565b6040518082815260200191505060405180910390f35b34801561044857600080fd5b50610451610e53565b6040518082815260200191505060405180910390f35b34801561047357600080fd5b5061047c610e72565b005b34801561048a57600080fd5b50610493610fad565b005b3480156104a157600080fd5b506104aa611118565b005b3480156104b857600080fd5b506104ef600480360360408110156104cf57600080fd5b810190808035906020019092919080359060200190929190505050611236565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610532578082015181840152602081019050610517565b505050509050019250505060405180910390f35b34801561055257600080fd5b5061057f6004803603602081101561056957600080fd5b8101908080359060200190929190505050611380565b005b34801561058d57600080fd5b5061059661138a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e457600080fd5b506105ed6113b3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063b57600080fd5b506106446113f0565b6040518082815260200191505060405180910390f35b34801561066657600080fd5b5061066f61140d565b604051808215151515815260200191505060405180910390f35b34801561069557600080fd5b506106c2600480360360208110156106ac57600080fd5b8101908080359060200190929190505050611464565b005b3480156106d057600080fd5b50610707600480360360408110156106e757600080fd5b81019080803590602001909291908035906020019092919050505061146e565b005b34801561071557600080fd5b5061071e6116ce565b6040518082815260200191505060405180910390f35b34801561074057600080fd5b506107496116d8565b6040518082815260200191505060405180910390f35b34801561076b57600080fd5b506107746116e2565b005b61077e6117f6565b005b34801561078c57600080fd5b506107b9600480360360208110156107a357600080fd5b8101908080359060200190929190505050611a8d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080757600080fd5b5061084a6004803603602081101561081e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611add565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561088d578082015181840152602081019050610872565b505050509050019250505060405180910390f35b6108a9611b87565b005b6108e1600480360360408110156108c157600080fd5b810190808035906020019092919080359060200190929190505050611e24565b005b610939600480360360608110156108f957600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612046565b005b34801561094757600080fd5b5061098a6004803603602081101561095e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120df565b005b34801561099857600080fd5b506109db600480360360208110156109af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612167565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a1e578082015181840152602081019050610a03565b505050509050019250505060405180910390f35b6000600c6000600b54815260200190815260200160002054905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600042905090565b600060025460106000600b5481526020019081526020016000205460019004811515610ac857fe5b069050600073ffffffffffffffffffffffffffffffffffffffff16600e6000600b548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b5e578080600101915050600254811115610b5d57600090505b5b50565b6000600a60009054906101000a900460ff16905090565b60608183101515610b8857600080fd5b60006001610b968585612211565b858503030190506000809050606082604051908082528060200260200182016040528015610bd35781602001602082028038833980820191505090505b50905060008690505b8581111515610cbd5760007f01000000000000000000000000000000000000000000000000000000000000000260076000600b5481526020019081526020016000206000838152602001908152602001600020546000602081101515610c3e57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515610cb057808284815181101515610c9957fe5b906020019060200201818152505082806001019350505b8080600101915050610bdc565b5080935050505092915050565b600280811115610cd657fe5b600a60009054906101000a900460ff166002811115610cf157fe5b141515610cfd57600080fd5b600b600081548092919060010191905055506000600a60006101000a81548160ff02191690836002811115610d2e57fe5b0217905550565b606060126000600b548152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610dcc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d82575b5050505050905090565b6000838383604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182815260200193505050506040516020818303038152906040528051906020012090509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b610e7a61140d565b1515610eee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600042905060006002811115610fbf57fe5b600a60009054906101000a900460ff166002811115610fda57fe5b141561109d5760066000600b548152602001908152602001600020548111156110985760056000600b548152602001908152602001600020546002541415611045576001600a60006101000a81548160ff0219169083600281111561103b57fe5b0217905550611092565b6202a30060066000600b548152602001908152602001600020600082825401925050819055506202a300600d6000600b548152602001908152602001600020600082825401925050819055505b50611116565b611114565b600160028111156110aa57fe5b600a60009054906101000a900460ff1660028111156110c557fe5b141561111357600d6000600b54815260200190815260200160002054811115611112576002600a60006101000a81548160ff0219169083600281111561110757fe5b021790555050611116565b5b5b505b565b6000600281111561112557fe5b600a60009054906101000a900460ff16600281111561114057fe5b148061117157506001600281111561115457fe5b600a60009054906101000a900460ff16600281111561116f57fe5b145b151561117c57600080fd5b6000600281111561118957fe5b600a60009054906101000a900460ff1660028111156111a457fe5b14156111d3576001600a60006101000a81548160ff021916908360028111156111c957fe5b0217905550611234565b600160028111156111e057fe5b600a60009054906101000a900460ff1660028111156111fb57fe5b1415611232576002600a60006101000a81548160ff0219169083600281111561122057fe5b021790555061122d6117f6565b611233565b5b5b565b6060818310151561124657600080fd5b60006112528484612211565b9050600080905060608260405190808252806020026020018201604052801561128a5781602001602082028038833980820191505090505b50905060008690505b85811115156113735760007f01000000000000000000000000000000000000000000000000000000000000000260076000600b54815260200190815260200160002060008381526020019081526020016000205460006020811015156112f557fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156113665780828481518110151561134f57fe5b906020019060200201818152505082806001019350505b8080600101915050611293565b5080935050505092915050565b8060028190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060116000600b54815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060056000600b54815260200190815260200160002054905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b8060018190555050565b6001600281111561147b57fe5b600a60009054906101000a900460ff16600281111561149657fe5b1415156114a257600080fd5b60006114af338484610dd6565b90508060076000600b5481526020019081526020016000206000858152602001908152602001600020541415156114e557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600e6000600b548152602001908152602001600020600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561156657600080fd5b60106000600b548152602001908152602001600020548160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060106000600b54815260200190815260200160002081905550600c6000600b5481526020019081526020016000206000815480929190600101919050555033600e6000600b548152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600f6000600b54815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550505050565b6000600154905090565b6000600b54905090565b6002808111156116ee57fe5b600a60009054906101000a900460ff16600281111561170957fe5b14151561171557600080fd5b600060146000600b5481526020019081526020016000205460136000600b548152602001908152602001600020546001900481151561175057fe5b06905060126000600b5481526020019081526020016000208181548110151561177557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660156000600b54815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60028081111561180257fe5b600a60009054906101000a900460ff16600281111561181d57fe5b14151561182957600080fd5b600060025460106000600b548152602001908152602001600020546001900481151561185157fe5b0690505b600073ffffffffffffffffffffffffffffffffffffffff16600e6000600b548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118ec5780806001019150506002548111156118e757600090505b611855565b600e6000600b548152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660116000600b54815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061198e61138a565b73ffffffffffffffffffffffffffffffffffffffff166108fc60033073ffffffffffffffffffffffffffffffffffffffff16318115156119ca57fe5b049081150290604051600060405180830381858888f193505050501580156119f6573d6000803e3d6000fd5b5060116000600b54815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015611a89573d6000803e3d6000fd5b5050565b6000600e6000600b548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600f6000600b54815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611b7b57602002820191906000526020600020905b815481526020019060010190808311611b67575b50505050509050919050565b60006002811115611b9457fe5b600a60009054906101000a900460ff166002811115611baf57fe5b1480611be0575060016002811115611bc357fe5b600a60009054906101000a900460ff166002811115611bde57fe5b145b1515611beb57600080fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515611c3957600080fd5b60126000600b5481526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060019003919050555060136000600b5481526020019081526020016000205433604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040528051906020012060136000600b5481526020019081526020016000208190555060146000600b548152602001908152602001600020600081548092919060010191905055507fc21b87340588bdc78634253d4b0c2c02f475010edc0dc0c201bb0db913fa51a033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60015434141515611e3457600080fd5b60008210158015611e46575060025482105b1515611e5157600080fd5b60006002811115611e5e57fe5b600a60009054906101000a900460ff166002811115611e7957fe5b141515611e8557600080fd5b600060010260076000600b548152602001908152602001600020600084815260200190815260200160002054141515611ebd57600080fd5b6103e88110158015611ed0575061271081105b1515611edb57600080fd5b60056000600b548152602001908152602001600020600081548092919060010191905055506000611f0d338484610dd6565b90508060076000600b54815260200190815260200160002060008581526020019081526020016000208190555060086000600b54815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190915055507f5c6c890314aa0d49059c35b35ff86ffb43efe8f543dc3691558f39dfa4a8201133604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160025460056000600b54815260200190815260200160002054141561204157612040611118565b5b505050565b6120508383611e24565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561208b57600080fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550505050565b6120e761140d565b151561215b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612164816122ec565b50565b606060086000600b54815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561220557602002820191906000526020600020905b8154815260200190600101908083116121f1575b50505050509050919050565b6000806000905060008490505b83811115156122e15760007f01000000000000000000000000000000000000000000000000000000000000000260076000600b548152602001908152602001600020600083815260200190815260200160002054600060208110151561228057fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156122d45781806001019250505b808060010191505061221e565b508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156123b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820477ccf2ff50d7221b9d9776015b3fd2a7b2fdbfd2827feb5c0ab12c4eb7e3ffa0029",
  "deployedBytecode": "0x608060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063020c6fed1461019b57806303652dea146101c65780630501b79f1461022b57806305eaf6d514610256578063124b65b41461026d5780631ab04352146102a6578063281d62c414610340578063455772d214610357578063676e2680146103c35780636f9fb98a1461043c578063715018a61461046757806376179ae41461047e57806381dda9fa14610495578063871933e2146104ac5780638950ce0b146105465780638da5cb5b146105815780638e7ea5b2146105d85780638f10fd451461062f5780638f32d59b1461065a57806391b7f5ed146106895780639348cef7146106c457806398d5fdca146107095780639f8743f714610734578063a111ece71461075f578063b2185bb114610776578063b93f9b0a14610780578063cd91b030146107fb578063d2ef7398146108a1578063d6febde8146108ab578063ed150e78146108e3578063f2fde38b1461093b578063f4ff66711461098c575b600080fd5b3480156101a757600080fd5b506101b0610a32565b6040518082815260200191505060405180910390f35b3480156101d257600080fd5b50610215600480360360208110156101e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4f565b6040518082815260200191505060405180910390f35b34801561023757600080fd5b50610240610a98565b6040518082815260200191505060405180910390f35b34801561026257600080fd5b5061026b610aa0565b005b34801561027957600080fd5b50610282610b61565b6040518082600281111561029257fe5b60ff16815260200191505060405180910390f35b3480156102b257600080fd5b506102e9600480360360408110156102c957600080fd5b810190808035906020019092919080359060200190929190505050610b78565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561032c578082015181840152602081019050610311565b505050509050019250505060405180910390f35b34801561034c57600080fd5b50610355610cca565b005b34801561036357600080fd5b5061036c610d35565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103af578082015181840152602081019050610394565b505050509050019250505060405180910390f35b3480156103cf57600080fd5b50610426600480360360608110156103e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610dd6565b6040518082815260200191505060405180910390f35b34801561044857600080fd5b50610451610e53565b6040518082815260200191505060405180910390f35b34801561047357600080fd5b5061047c610e72565b005b34801561048a57600080fd5b50610493610fad565b005b3480156104a157600080fd5b506104aa611118565b005b3480156104b857600080fd5b506104ef600480360360408110156104cf57600080fd5b810190808035906020019092919080359060200190929190505050611236565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610532578082015181840152602081019050610517565b505050509050019250505060405180910390f35b34801561055257600080fd5b5061057f6004803603602081101561056957600080fd5b8101908080359060200190929190505050611380565b005b34801561058d57600080fd5b5061059661138a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e457600080fd5b506105ed6113b3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063b57600080fd5b506106446113f0565b6040518082815260200191505060405180910390f35b34801561066657600080fd5b5061066f61140d565b604051808215151515815260200191505060405180910390f35b34801561069557600080fd5b506106c2600480360360208110156106ac57600080fd5b8101908080359060200190929190505050611464565b005b3480156106d057600080fd5b50610707600480360360408110156106e757600080fd5b81019080803590602001909291908035906020019092919050505061146e565b005b34801561071557600080fd5b5061071e6116ce565b6040518082815260200191505060405180910390f35b34801561074057600080fd5b506107496116d8565b6040518082815260200191505060405180910390f35b34801561076b57600080fd5b506107746116e2565b005b61077e6117f6565b005b34801561078c57600080fd5b506107b9600480360360208110156107a357600080fd5b8101908080359060200190929190505050611a8d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080757600080fd5b5061084a6004803603602081101561081e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611add565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561088d578082015181840152602081019050610872565b505050509050019250505060405180910390f35b6108a9611b87565b005b6108e1600480360360408110156108c157600080fd5b810190808035906020019092919080359060200190929190505050611e24565b005b610939600480360360608110156108f957600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612046565b005b34801561094757600080fd5b5061098a6004803603602081101561095e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120df565b005b34801561099857600080fd5b506109db600480360360208110156109af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612167565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a1e578082015181840152602081019050610a03565b505050509050019250505060405180910390f35b6000600c6000600b54815260200190815260200160002054905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600042905090565b600060025460106000600b5481526020019081526020016000205460019004811515610ac857fe5b069050600073ffffffffffffffffffffffffffffffffffffffff16600e6000600b548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b5e578080600101915050600254811115610b5d57600090505b5b50565b6000600a60009054906101000a900460ff16905090565b60608183101515610b8857600080fd5b60006001610b968585612211565b858503030190506000809050606082604051908082528060200260200182016040528015610bd35781602001602082028038833980820191505090505b50905060008690505b8581111515610cbd5760007f01000000000000000000000000000000000000000000000000000000000000000260076000600b5481526020019081526020016000206000838152602001908152602001600020546000602081101515610c3e57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515610cb057808284815181101515610c9957fe5b906020019060200201818152505082806001019350505b8080600101915050610bdc565b5080935050505092915050565b600280811115610cd657fe5b600a60009054906101000a900460ff166002811115610cf157fe5b141515610cfd57600080fd5b600b600081548092919060010191905055506000600a60006101000a81548160ff02191690836002811115610d2e57fe5b0217905550565b606060126000600b548152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610dcc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d82575b5050505050905090565b6000838383604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182815260200193505050506040516020818303038152906040528051906020012090509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b610e7a61140d565b1515610eee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600042905060006002811115610fbf57fe5b600a60009054906101000a900460ff166002811115610fda57fe5b141561109d5760066000600b548152602001908152602001600020548111156110985760056000600b548152602001908152602001600020546002541415611045576001600a60006101000a81548160ff0219169083600281111561103b57fe5b0217905550611092565b6202a30060066000600b548152602001908152602001600020600082825401925050819055506202a300600d6000600b548152602001908152602001600020600082825401925050819055505b50611116565b611114565b600160028111156110aa57fe5b600a60009054906101000a900460ff1660028111156110c557fe5b141561111357600d6000600b54815260200190815260200160002054811115611112576002600a60006101000a81548160ff0219169083600281111561110757fe5b021790555050611116565b5b5b505b565b6000600281111561112557fe5b600a60009054906101000a900460ff16600281111561114057fe5b148061117157506001600281111561115457fe5b600a60009054906101000a900460ff16600281111561116f57fe5b145b151561117c57600080fd5b6000600281111561118957fe5b600a60009054906101000a900460ff1660028111156111a457fe5b14156111d3576001600a60006101000a81548160ff021916908360028111156111c957fe5b0217905550611234565b600160028111156111e057fe5b600a60009054906101000a900460ff1660028111156111fb57fe5b1415611232576002600a60006101000a81548160ff0219169083600281111561122057fe5b021790555061122d6117f6565b611233565b5b5b565b6060818310151561124657600080fd5b60006112528484612211565b9050600080905060608260405190808252806020026020018201604052801561128a5781602001602082028038833980820191505090505b50905060008690505b85811115156113735760007f01000000000000000000000000000000000000000000000000000000000000000260076000600b54815260200190815260200160002060008381526020019081526020016000205460006020811015156112f557fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156113665780828481518110151561134f57fe5b906020019060200201818152505082806001019350505b8080600101915050611293565b5080935050505092915050565b8060028190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060116000600b54815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060056000600b54815260200190815260200160002054905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b8060018190555050565b6001600281111561147b57fe5b600a60009054906101000a900460ff16600281111561149657fe5b1415156114a257600080fd5b60006114af338484610dd6565b90508060076000600b5481526020019081526020016000206000858152602001908152602001600020541415156114e557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600e6000600b548152602001908152602001600020600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561156657600080fd5b60106000600b548152602001908152602001600020548160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060106000600b54815260200190815260200160002081905550600c6000600b5481526020019081526020016000206000815480929190600101919050555033600e6000600b548152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600f6000600b54815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550505050565b6000600154905090565b6000600b54905090565b6002808111156116ee57fe5b600a60009054906101000a900460ff16600281111561170957fe5b14151561171557600080fd5b600060146000600b5481526020019081526020016000205460136000600b548152602001908152602001600020546001900481151561175057fe5b06905060126000600b5481526020019081526020016000208181548110151561177557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660156000600b54815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60028081111561180257fe5b600a60009054906101000a900460ff16600281111561181d57fe5b14151561182957600080fd5b600060025460106000600b548152602001908152602001600020546001900481151561185157fe5b0690505b600073ffffffffffffffffffffffffffffffffffffffff16600e6000600b548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118ec5780806001019150506002548111156118e757600090505b611855565b600e6000600b548152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660116000600b54815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061198e61138a565b73ffffffffffffffffffffffffffffffffffffffff166108fc60033073ffffffffffffffffffffffffffffffffffffffff16318115156119ca57fe5b049081150290604051600060405180830381858888f193505050501580156119f6573d6000803e3d6000fd5b5060116000600b54815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015611a89573d6000803e3d6000fd5b5050565b6000600e6000600b548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600f6000600b54815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611b7b57602002820191906000526020600020905b815481526020019060010190808311611b67575b50505050509050919050565b60006002811115611b9457fe5b600a60009054906101000a900460ff166002811115611baf57fe5b1480611be0575060016002811115611bc357fe5b600a60009054906101000a900460ff166002811115611bde57fe5b145b1515611beb57600080fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515611c3957600080fd5b60126000600b5481526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060019003919050555060136000600b5481526020019081526020016000205433604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040516020818303038152906040528051906020012060136000600b5481526020019081526020016000208190555060146000600b548152602001908152602001600020600081548092919060010191905055507fc21b87340588bdc78634253d4b0c2c02f475010edc0dc0c201bb0db913fa51a033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60015434141515611e3457600080fd5b60008210158015611e46575060025482105b1515611e5157600080fd5b60006002811115611e5e57fe5b600a60009054906101000a900460ff166002811115611e7957fe5b141515611e8557600080fd5b600060010260076000600b548152602001908152602001600020600084815260200190815260200160002054141515611ebd57600080fd5b6103e88110158015611ed0575061271081105b1515611edb57600080fd5b60056000600b548152602001908152602001600020600081548092919060010191905055506000611f0d338484610dd6565b90508060076000600b54815260200190815260200160002060008581526020019081526020016000208190555060086000600b54815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190915055507f5c6c890314aa0d49059c35b35ff86ffb43efe8f543dc3691558f39dfa4a8201133604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160025460056000600b54815260200190815260200160002054141561204157612040611118565b5b505050565b6120508383611e24565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561208b57600080fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550505050565b6120e761140d565b151561215b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612164816122ec565b50565b606060086000600b54815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561220557602002820191906000526020600020905b8154815260200190600101908083116121f1575b50505050509050919050565b6000806000905060008490505b83811115156122e15760007f01000000000000000000000000000000000000000000000000000000000000000260076000600b548152602001908152602001600020600083815260200190815260200160002054600060208110151561228057fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156122d45781806001019250505b808060010191505061221e565b508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156123b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820477ccf2ff50d7221b9d9776015b3fd2a7b2fdbfd2827feb5c0ab12c4eb7e3ffa0029",
  "sourceMap": "63:1062:4:-;;;454:4:1;426:32;;659:17;635:41;;751:17;724:44;;132:68:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;132:68:4;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;132:68:4;;;;;;;;;;;;;;;;175:11;683:10:3;674:6;;:19;;;;;;;;;;;;;;;;;;741:6;;;;;;;;;;;708:40;;737:1;708:40;;;;;;;;;;;;1982:11:1;1967:12;:26;;;;2007:1;1999:5;:9;;;;2014:13;:11;;;:13;;;:::i;:::-;1923:109;132:68:4;63:1062;;2073:226:1;2110:5;;:7;;;;;;;;;;;;;2123:12;2138:15;2123:30;;2177:1;2159:8;:15;2168:5;;2159:15;;;;;;;;;;;:19;;;;2211:8;;2204:4;:15;2184:10;:17;2195:5;;2184:17;;;;;;;;;;;:35;;;;2255:11;;2248:4;:18;2225:13;:20;2239:5;;2225:20;;;;;;;;;;;:41;;;;2293:1;2272:11;:18;2284:5;;2272:18;;;;;;;;;;;:22;;;;2073:226;:::o;63:1062:4:-;;;;;;;",
  "deployedSourceMap": "63:1062:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5237:89:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5237:89:1;;;;;;;;;;;;;;;;;;;;;;;4966:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4966:106:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4966:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7884:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7884:87:1;;;;;;;;;;;;;;;;;;;;;;;4723:239;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4723:239:1;;;;;;6003:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6003:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6711:427;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6711:427:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6711:427:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6711:427:1;;;;;;;;;;;;;;;;;7396:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7396:117:1;;;;;;828:99:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;828:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;828:99:4;;;;;;;;;;;;;;;;;3505:167:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3505:167:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3505:167:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7784:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7784:96:1;;;;;;;;;;;;;;;;;;;;;;;1624:137:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1624:137:3;;;;;;7975:545:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7975:545:1;;;;;;5723:276;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5723:276:1;;;;;;6231:406;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6231:406:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6231:406:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6231:406:1;;;;;;;;;;;;;;;;;7672:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7672:108:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7672:108:1;;;;;;;;;;;;;;;;;;;;831:85:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;831:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;6075:82:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6075:82:1;;;;;;;;;;;;;;;;;;;;;;;;;;;5150:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5150:83:1;;;;;;;;;;;;;;;;;;;;;;;1190:90:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1190:90:3;;;;;;;;;;;;;;;;;;;;;;;;;;;7517:69:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7517:69:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7517:69:1;;;;;;;;;;;;;;;;;;;;3677:594;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3677:594:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3677:594:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7590:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7590:78:1;;;;;;;;;;;;;;;;;;;;;;;5076:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5076:70:1;;;;;;;;;;;;;;;;;;;;;;;931:192:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;931:192:4;;;;;;4275:444:1;;;;;;5330:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5330:101:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5330:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5576:143:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5576:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5576:143:1;;;;;;;;;;;;;;;;;484:340:4;;;;;;2491:602:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2491:602:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3276:222;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3276:222:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:115:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:115:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:115:3;;;;;;;;;;;;;;;;;;;;;;5435:137:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5435:137:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5435:137:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5435:137:1;;;;;;;;;;;;;;;;;5237:89;5284:4;5303:11;:18;5315:5;;5303:18;;;;;;;;;;;;5296:25;;5237:89;:::o;4966:106::-;5030:4;5049:11;:18;5061:5;5049:18;;;;;;;;;;;;;;;;5042:25;;4966:106;;;:::o;7884:87::-;7929:7;7951:15;7944:22;;7884:87;:::o;4723:239::-;4761:14;4798:12;;4783:4;:11;4788:5;;4783:11;;;;;;;;;;;;4778:17;;;:32;;;;;;;;4761:49;;4859:1;4820:41;;:9;:16;4830:5;;4820:16;;;;;;;;;;;:27;4837:9;4820:27;;;;;;;;;;;;;;;;;;;;;:41;;;4816:142;;;4871:11;;;;;;;4906:12;;4894:9;:24;4890:62;;;4942:1;4930:13;;4890:62;4816:142;4723:239;:::o;6003:68::-;6043:4;6062;;;;;;;;;;;6055:11;;6003:68;:::o;6711:427::-;6787:13;6824:3;6816:5;:11;6808:20;;;;;;;;6834:9;6889:1;6860:26;6875:5;6882:3;6860:14;:26::i;:::-;6852:5;6846:3;:11;:40;:44;6834:56;;6896:6;6905:1;6896:10;;6912:21;6947:4;6936:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6936:16:1;;;;6912:40;;6963:11;6977:5;6963:19;;6958:156;6994:3;6984:6;:13;;6958:156;;;7054:1;7021:34;;:11;:18;7033:5;;7021:18;;;;;;;;;;;:26;7040:6;7021:26;;;;;;;;;;;;7048:1;7021:29;;;;;;;;;;;;:34;;;;;7017:91;;;7080:6;7067:7;7075:1;7067:10;;;;;;;;;;;;;;;;;:19;;;;;7096:3;;;;;;;7017:91;6999:8;;;;;;;6958:156;;;;7126:7;7119:14;;;;;6711:427;;;;:::o;7396:117::-;7462:11;7454:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;7446:28;;;;;;;;7480:5;;:7;;;;;;;;;;;;;7500:8;7493:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;7396:117::o;828:99:4:-;874:16;905:10;:17;916:5;;905:17;;;;;;;;;;;898:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:99;:::o;3505:167:1:-;3594:7;3643:5;3650:4;3656:9;3626:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3626:40:1;;;3616:51;;;;;;3609:58;;3505:167;;;;;:::o;7784:96::-;7835:4;7862;7854:21;;;7847:28;;7784:96;:::o;1624:137:3:-;1043:9;:7;:9::i;:::-;1035:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:1;1685:40;;1706:6;;;;;;;;;;;1685:40;;;;;;;;;;;;1752:1;1735:6;;:19;;;;;;;;;;;;;;;;;;1624:137::o;7975:545:1:-;8011:12;8026:15;8011:30;;8059:8;8051:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;8047:469;;;8088:10;:17;8099:5;;8088:17;;;;;;;;;;;;8081:4;:24;8077:258;;;8137:8;:15;8146:5;;8137:15;;;;;;;;;;;;8121:12;;:31;8117:196;;;8173:11;8166:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;8117:196;;;8234:16;8213:10;:17;8224:5;;8213:17;;;;;;;;;;;;:37;;;;;;;;;;;8286:16;8262:13;:20;8276:5;;8262:20;;;;;;;;;;;;:40;;;;;;;;;;;8117:196;8320:7;;;8077:258;8047:469;;;8381:11;8373:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;8369:147;;;8413:13;:20;8427:5;;8413:20;;;;;;;;;;;;8406:4;:27;8402:86;;;8452:11;8445:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;8473:7;;;8402:86;8369:147;8047:469;7975:545;;:::o;5723:276::-;5788:8;5780:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;:39;;;;5808:11;5800:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;5780:39;5772:48;;;;;;;;5838:8;5830:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;5826:169;;;5863:11;5856:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;5826:169;;;5899:11;5891:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;5887:108;;;5927:11;5920:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;5946:12;:10;:12::i;:::-;5887:108;;;;5826:169;5723:276::o;6231:406::-;6304:13;6341:3;6333:5;:11;6325:20;;;;;;;;6351:9;6363:26;6378:5;6385:3;6363:14;:26::i;:::-;6351:38;;6395:6;6404:1;6395:10;;6411:21;6446:4;6435:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6435:16:1;;;;6411:40;;6462:11;6476:5;6462:19;;6457:156;6493:3;6483:6;:13;;6457:156;;;6553:1;6520:34;;:11;:18;6532:5;;6520:18;;;;;;;;;;;:26;6539:6;6520:26;;;;;;;;;;;;6547:1;6520:29;;;;;;;;;;;;:34;;;;6516:91;;;6579:6;6566:7;6574:1;6566:10;;;;;;;;;;;;;;;;;:19;;;;;6595:3;;;;;;;6516:91;6498:8;;;;;;;6457:156;;;;6625:7;6618:14;;;;;6231:406;;;;:::o;7672:108::-;7772:3;7757:12;:18;;;;7672:108;:::o;831:85:3:-;869:15;903:6;;;;;;;;;;;896:13;;831:85;:::o;6075:82:1:-;6117:7;6139:6;:13;6146:5;;6139:13;;;;;;;;;;;;;;;;;;;;;6132:20;;6075:82;:::o;5150:83::-;5194:4;5213:8;:15;5222:5;;5213:15;;;;;;;;;;;;5206:22;;5150:83;:::o;1190:90:3:-;1230:4;1267:6;;;;;;;;;;;1253:20;;:10;:20;;;1246:27;;1190:90;:::o;7517:69:1:-;7576:5;7561:12;:20;;;;7517:69;:::o;3677:594::-;3750:11;3742:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;3734:28;;;;;;;;3773:18;3794:45;3811:10;3823:4;3829:9;3794:16;:45::i;:::-;3773:66;;3881:10;3853:11;:18;3865:5;;3853:18;;;;;;;;;;;:24;3872:4;3853:24;;;;;;;;;;;;:38;3845:47;;;;;;;;3954:10;3928:36;;:9;:16;3938:5;;3928:16;;;;;;;;;;;:22;3945:4;3928:22;;;;;;;;;;;;;;;;;;;;;:36;;;;3920:45;;;;;;;;4013:4;:11;4018:5;;4013:11;;;;;;;;;;;;4026:10;3996:41;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3996:41:1;;;3986:52;;;;;;3972:4;:11;3977:5;;3972:11;;;;;;;;;;;:66;;;;4044:11;:18;4056:5;;4044:18;;;;;;;;;;;;:20;;;;;;;;;;;;;4095:10;4070:9;:16;4080:5;;4070:16;;;;;;;;;;;:22;4087:4;4070:22;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;4111:22;:29;4134:5;;4111:29;;;;;;;;;;;:41;4141:10;4111:41;;;;;;;;;;;;;;;4158:4;4111:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4111:52:1;;;;;;;;;;;;;;;;;;;;;;3677:594;;;:::o;7590:78::-;7632:4;7651:12;;7644:19;;7590:78;:::o;5076:70::-;5117:4;5136:5;;5129:12;;5076:70;:::o;931:192:4:-;993:11;985:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;977:28;;;;;;;;1011:14;1048:13;:20;1062:5;;1048:20;;;;;;;;;;;;1033:4;:11;1038:5;;1033:11;;;;;;;;;;;;1028:17;;;:40;;;;;;;;1011:57;;1090:10;:17;1101:5;;1090:17;;;;;;;;;;;1108:9;1090:28;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:6;:13;1081:5;;1074:13;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;931:192;:::o;4275:444:1:-;4348:11;4340:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;4332:28;;;;;;;;4366:14;4403:12;;4388:4;:11;4393:5;;4388:11;;;;;;;;;;;;4383:17;;;:32;;;;;;;;4366:49;;4421:145;4467:1;4428:41;;:9;:16;4438:5;;4428:16;;;;;;;;;;;:27;4445:9;4428:27;;;;;;;;;;;;;;;;;;;;;:41;;;4421:145;;;4479:11;;;;;;;4514:12;;4502:9;:24;4498:62;;;4550:1;4538:13;;4498:62;4421:145;;;4587:9;:16;4597:5;;4587:16;;;;;;;;;;;:27;4604:9;4587:27;;;;;;;;;;;;;;;;;;;;;4571:6;:13;4578:5;;4571:13;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;4620:7;:5;:7::i;:::-;:16;;:43;4661:1;4645:4;4637:21;;;:25;;;;;;;;4620:43;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4620:43:1;4669:6;:13;4676:5;;4669:13;;;;;;;;;;;;;;;;;;;;;:22;;:45;4700:4;4692:21;;;4669:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4669:45:1;4275:444;:::o;5330:101::-;5382:7;5404:9;:16;5414:5;;5404:16;;;;;;;;;;;:22;5421:4;5404:22;;;;;;;;;;;;;;;;;;;;;5397:29;;5330:101;;;:::o;5576:143::-;5647:13;5675:22;:29;5698:5;;5675:29;;;;;;;;;;;:39;5705:8;5675:39;;;;;;;;;;;;;;;5668:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576:143;;;:::o;484:340:4:-;542:8;534:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;:39;;;;562:11;554:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;534:39;526:48;;;;;;;;614:1;588:11;:23;600:10;588:23;;;;;;;;;;;;;;;;:27;580:36;;;;;;;;622:10;:17;633:5;;622:17;;;;;;;;;;;645:10;622:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;622:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:11;:23;674:10;662:23;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;734:4;:11;739:5;;734:11;;;;;;;;;;;;747:10;717:41;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;717:41:4;;;707:52;;;;;;693:4;:11;698:5;;693:11;;;;;;;;;;;:66;;;;765:13;:20;779:5;;765:20;;;;;;;;;;;;:22;;;;;;;;;;;;;798:21;808:10;798:21;;;;;;;;;;;;;;;;;;;;;;484:340::o;2491:602:1:-;2574:12;;2561:9;:25;2553:34;;;;;;;;2609:1;2601:4;:9;;:32;;;;;2621:12;;2614:4;:19;2601:32;2593:41;;;;;;;;2656:8;2648:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;2640:25;;;;;;;;2707:1;2679:29;;:11;:18;2691:5;;2679:18;;;;;;;;;;;:24;2698:4;2679:24;;;;;;;;;;;;:29;2671:38;;;;;;;;2736:4;2723:9;:17;;:38;;;;;2756:5;2744:9;:17;2723:38;2715:47;;;;;;;;2769:8;:15;2778:5;;2769:15;;;;;;;;;;;;:17;;;;;;;;;;;;;2793:18;2814:45;2831:10;2843:4;2849:9;2814:16;:45::i;:::-;2793:66;;2892:10;2865:11;:18;2877:5;;2865:18;;;;;;;;;;;:24;2884:4;2865:24;;;;;;;;;;;:37;;;;2908:19;:26;2928:5;;2908:26;;;;;;;;;;;:38;2935:10;2908:38;;;;;;;;;;;;;;;2952:4;2908:49;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2908:49:1;;;;;;;;;;;;;;;;;;;;;;2969:15;2973:10;2969:15;;;;;;;;;;;;;;;;;;;;;;3014:12;;2995:8;:15;3004:5;;2995:15;;;;;;;;;;;;:31;2991:98;;;3036:10;:8;:10::i;:::-;2991:98;2491:602;;;:::o;3276:222::-;3372:20;3376:4;3382:9;3372:3;:20::i;:::-;3420:11;3406:25;;:10;:25;;;;3398:34;;;;;;;;3438:11;:24;3450:11;3438:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;3276:222;;;:::o;1910:115:3:-;1043:9;:7;:9::i;:::-;1035:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1990:28;2009:8;1990:18;:28::i;:::-;1910:115;:::o;5435:137:1:-;5503:13;5531:19;:26;5551:5;;5531:26;;;;;;;;;;;:36;5558:8;5531:36;;;;;;;;;;;;;;;5524:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:137;;;:::o;7142:250::-;7210:4;7222:9;7234:1;7222:13;;7246:11;7260:5;7246:19;;7241:130;7277:3;7267:6;:13;;7241:130;;;7337:1;7304:34;;:11;:18;7316:5;;7304:18;;;;;;;;;;;:26;7323:6;7304:26;;;;;;;;;;;;7331:1;7304:29;;;;;;;;;;;;:34;;;;7300:65;;;7350:6;;;;;;;7300:65;7282:8;;;;;;;7241:130;;;;7383:4;7376:11;;;7142:250;;;;:::o;2126:233:3:-;2227:1;2207:22;;:8;:22;;;;2199:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:8;2287:38;;2308:6;;;;;;;;;;;2287:38;;;;;;;;;;;;2344:8;2335:6;;:17;;;;;;;;;;;;;;;;;;2126:233;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./DreamTicket.sol\";\n\ncontract SecondDream is DreamTicket {\n\n  // TODO: write test code\n\n  constructor (uint ticketTotal) DreamTicket(ticketTotal) public {\n  }\n  \n  event Challenge(\n    address player\n  );\n\n  mapping(uint => address[]) private applicants;\n\n  mapping(uint => bytes32) private seed;\n\n  mapping(uint => uint) private applicantsNum;\n\n  mapping(uint => address) private winner;\n\n  /**\n   * It doesn't decide who is winner.\n   */\n  function challenge() public payable {\n    require(term == Term.BUY || term == Term.REVEAL);\n    require(introducers[msg.sender] > 0);\n    applicants[round].push(msg.sender);\n    introducers[msg.sender]--;\n    seed[round] = keccak256(abi.encodePacked(seed[round], msg.sender));\n    applicantsNum[round]++;\n    emit Challenge(msg.sender);\n  }\n\n  function getApplicants() public view returns (address[] memory) {\n    return applicants[round];\n  }\n\n  function drawSecondDreamWinner() public {\n    require(term == Term.RESULT);\n    uint seedIndex = uint(seed[round]) % applicantsNum[round];\n    winner[round] = applicants[round][seedIndex];\n  }\n}",
  "sourcePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol",
  "ast": {
    "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol",
    "exportedSymbols": {
      "SecondDream": [
        1641
      ]
    },
    "id": 1642,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1499,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:4"
      },
      {
        "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/DreamTicket.sol",
        "file": "./DreamTicket.sol",
        "id": 1500,
        "nodeType": "ImportDirective",
        "scope": 1642,
        "sourceUnit": 1330,
        "src": "34:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1501,
              "name": "DreamTicket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1329,
              "src": "87:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DreamTicket_$1329",
                "typeString": "contract DreamTicket"
              }
            },
            "id": 1502,
            "nodeType": "InheritanceSpecifier",
            "src": "87:11:4"
          }
        ],
        "contractDependencies": [
          1329,
          1497
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1641,
        "linearizedBaseContracts": [
          1641,
          1329,
          1497
        ],
        "name": "SecondDream",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1510,
              "nodeType": "Block",
              "src": "195:5:4",
              "statements": []
            },
            "documentation": null,
            "id": 1511,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1507,
                    "name": "ticketTotal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1504,
                    "src": "175:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1508,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1506,
                  "name": "DreamTicket",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1329,
                  "src": "163:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DreamTicket_$1329_$",
                    "typeString": "type(contract DreamTicket)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "163:24:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1504,
                  "name": "ticketTotal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "145:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "144:18:4"
            },
            "returnParameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:4"
            },
            "scope": 1641,
            "src": "132:68:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1515,
            "name": "Challenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "indexed": false,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 1515,
                  "src": "227:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "221:24:4"
            },
            "src": "206:40:4"
          },
          {
            "constant": false,
            "id": 1520,
            "name": "applicants",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "250:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 1519,
              "keyType": {
                "id": 1516,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "258:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "250:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1517,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "266:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1518,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "266:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1524,
            "name": "seed",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "300:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 1523,
              "keyType": {
                "id": 1521,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "308:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "300:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 1522,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1528,
            "name": "applicantsNum",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "342:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1527,
              "keyType": {
                "id": 1525,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "350:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "342:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1526,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "358:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1532,
            "name": "winner",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "390:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1531,
              "keyType": {
                "id": 1529,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "398:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "390:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "406:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "520:304:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1536,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "534:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1537,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "542:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BUY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "542:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "534:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1540,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "554:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1541,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "562:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "REVEAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "562:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "554:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "534:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1659,
                        1660
                      ],
                      "referencedDeclaration": 1659,
                      "src": "526:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "526:48:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1548,
                            "name": "introducers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "588:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1551,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1549,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1656,
                              "src": "600:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "600:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "588:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "614:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "588:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1659,
                        1660
                      ],
                      "referencedDeclaration": 1659,
                      "src": "580:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1555,
                  "nodeType": "ExpressionStatement",
                  "src": "580:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "645:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "645:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1556,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "622:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1558,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1557,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "633:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "622:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "622:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "622:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "662:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1564,
                        "name": "introducers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "662:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1567,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1565,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "674:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "674:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "662:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "662:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1570,
                        "name": "seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "693:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 1572,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1571,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "698:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "693:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1576,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1524,
                                "src": "734:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 1578,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1577,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 418,
                                "src": "739:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "734:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1579,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1656,
                                "src": "747:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "747:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1574,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1643,
                              "src": "717:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "717:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1573,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1650,
                        "src": "707:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "707:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "693:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1584,
                  "nodeType": "ExpressionStatement",
                  "src": "693:66:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "765:22:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1585,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "765:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1587,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1586,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "779:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "765:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "765:22:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "808:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "808:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1590,
                      "name": "Challenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1515,
                      "src": "798:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "EmitStatement",
                  "src": "793:26:4"
                }
              ]
            },
            "documentation": "It doesn't decide who is winner.",
            "id": 1596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "502:2:4"
            },
            "returnParameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:4"
            },
            "scope": 1641,
            "src": "484:340:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1606,
              "nodeType": "Block",
              "src": "892:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1602,
                      "name": "applicants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1520,
                      "src": "905:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(uint256 => address[] storage ref)"
                      }
                    },
                    "id": 1604,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1603,
                      "name": "round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "916:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "905:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1601,
                  "id": 1605,
                  "nodeType": "Return",
                  "src": "898:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 1607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApplicants",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:4"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "874:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1598,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "874:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1599,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "874:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "873:18:4"
            },
            "scope": 1641,
            "src": "828:99:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1639,
              "nodeType": "Block",
              "src": "971:152:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Term_$366",
                          "typeString": "enum DreamTicket.Term"
                        },
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1611,
                          "name": "term",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "985:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1612,
                            "name": "Term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "993:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                              "typeString": "type(enum DreamTicket.Term)"
                            }
                          },
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RESULT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "993:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "src": "985:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1659,
                        1660
                      ],
                      "referencedDeclaration": 1659,
                      "src": "977:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1616,
                  "nodeType": "ExpressionStatement",
                  "src": "977:28:4"
                },
                {
                  "assignments": [
                    1618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1618,
                      "name": "seedIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1639,
                      "src": "1011:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1617,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1011:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1628,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1620,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1524,
                            "src": "1033:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 1622,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1621,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "1038:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1033:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1028:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1028:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1624,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "1048:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1626,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1062:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1048:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1028:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1011:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "1074:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1631,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1630,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1081:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1074:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1632,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "1090:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1634,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1633,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "1101:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1090:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1636,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1635,
                        "name": "seedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1618,
                        "src": "1108:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1090:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1074:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1638,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:44:4"
                }
              ]
            },
            "documentation": null,
            "id": 1640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drawSecondDreamWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:2:4"
            },
            "returnParameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:0:4"
            },
            "scope": 1641,
            "src": "931:192:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1642,
        "src": "63:1062:4"
      }
    ],
    "src": "0:1125:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol",
    "exportedSymbols": {
      "SecondDream": [
        1641
      ]
    },
    "id": 1642,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1499,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:4"
      },
      {
        "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/DreamTicket.sol",
        "file": "./DreamTicket.sol",
        "id": 1500,
        "nodeType": "ImportDirective",
        "scope": 1642,
        "sourceUnit": 1330,
        "src": "34:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1501,
              "name": "DreamTicket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1329,
              "src": "87:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DreamTicket_$1329",
                "typeString": "contract DreamTicket"
              }
            },
            "id": 1502,
            "nodeType": "InheritanceSpecifier",
            "src": "87:11:4"
          }
        ],
        "contractDependencies": [
          1329,
          1497
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1641,
        "linearizedBaseContracts": [
          1641,
          1329,
          1497
        ],
        "name": "SecondDream",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1510,
              "nodeType": "Block",
              "src": "195:5:4",
              "statements": []
            },
            "documentation": null,
            "id": 1511,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1507,
                    "name": "ticketTotal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1504,
                    "src": "175:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1508,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1506,
                  "name": "DreamTicket",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1329,
                  "src": "163:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DreamTicket_$1329_$",
                    "typeString": "type(contract DreamTicket)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "163:24:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1504,
                  "name": "ticketTotal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "145:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "144:18:4"
            },
            "returnParameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:4"
            },
            "scope": 1641,
            "src": "132:68:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1515,
            "name": "Challenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "indexed": false,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 1515,
                  "src": "227:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "221:24:4"
            },
            "src": "206:40:4"
          },
          {
            "constant": false,
            "id": 1520,
            "name": "applicants",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "250:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 1519,
              "keyType": {
                "id": 1516,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "258:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "250:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1517,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "266:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1518,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "266:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1524,
            "name": "seed",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "300:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 1523,
              "keyType": {
                "id": 1521,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "308:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "300:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 1522,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1528,
            "name": "applicantsNum",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "342:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1527,
              "keyType": {
                "id": 1525,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "350:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "342:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1526,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "358:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1532,
            "name": "winner",
            "nodeType": "VariableDeclaration",
            "scope": 1641,
            "src": "390:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1531,
              "keyType": {
                "id": 1529,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "398:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "390:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "406:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "520:304:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1536,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "534:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1537,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "542:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BUY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "542:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "534:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1540,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "554:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1541,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "562:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "REVEAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "562:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "554:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "534:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1659,
                        1660
                      ],
                      "referencedDeclaration": 1659,
                      "src": "526:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "526:48:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1548,
                            "name": "introducers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "588:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1551,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1549,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1656,
                              "src": "600:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "600:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "588:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "614:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "588:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1659,
                        1660
                      ],
                      "referencedDeclaration": 1659,
                      "src": "580:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1555,
                  "nodeType": "ExpressionStatement",
                  "src": "580:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "645:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "645:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1556,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "622:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1558,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1557,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "633:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "622:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "622:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "622:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "662:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1564,
                        "name": "introducers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "662:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1567,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1565,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "674:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "674:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "662:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "662:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1570,
                        "name": "seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "693:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 1572,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1571,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "698:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "693:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1576,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1524,
                                "src": "734:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 1578,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1577,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 418,
                                "src": "739:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "734:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1579,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1656,
                                "src": "747:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "747:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1574,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1643,
                              "src": "717:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "717:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1573,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1650,
                        "src": "707:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "707:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "693:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1584,
                  "nodeType": "ExpressionStatement",
                  "src": "693:66:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "765:22:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1585,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "765:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1587,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1586,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "779:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "765:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "765:22:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "808:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "808:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1590,
                      "name": "Challenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1515,
                      "src": "798:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "EmitStatement",
                  "src": "793:26:4"
                }
              ]
            },
            "documentation": "It doesn't decide who is winner.",
            "id": 1596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "502:2:4"
            },
            "returnParameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:4"
            },
            "scope": 1641,
            "src": "484:340:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1606,
              "nodeType": "Block",
              "src": "892:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1602,
                      "name": "applicants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1520,
                      "src": "905:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(uint256 => address[] storage ref)"
                      }
                    },
                    "id": 1604,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1603,
                      "name": "round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "916:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "905:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1601,
                  "id": 1605,
                  "nodeType": "Return",
                  "src": "898:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 1607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApplicants",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:4"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "874:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1598,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "874:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1599,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "874:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "873:18:4"
            },
            "scope": 1641,
            "src": "828:99:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1639,
              "nodeType": "Block",
              "src": "971:152:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Term_$366",
                          "typeString": "enum DreamTicket.Term"
                        },
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1611,
                          "name": "term",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "985:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1612,
                            "name": "Term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "993:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                              "typeString": "type(enum DreamTicket.Term)"
                            }
                          },
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RESULT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "993:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "src": "985:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1659,
                        1660
                      ],
                      "referencedDeclaration": 1659,
                      "src": "977:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1616,
                  "nodeType": "ExpressionStatement",
                  "src": "977:28:4"
                },
                {
                  "assignments": [
                    1618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1618,
                      "name": "seedIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1639,
                      "src": "1011:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1617,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1011:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1628,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1620,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1524,
                            "src": "1033:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 1622,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1621,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "1038:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1033:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1028:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1028:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1624,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "1048:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1626,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1062:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1048:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1028:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1011:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "1074:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1631,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1630,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1081:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1074:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1632,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "1090:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1634,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1633,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "1101:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1090:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1636,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1635,
                        "name": "seedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1618,
                        "src": "1108:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1090:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1074:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1638,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:44:4"
                }
              ]
            },
            "documentation": null,
            "id": 1640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drawSecondDreamWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:2:4"
            },
            "returnParameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:0:4"
            },
            "scope": 1641,
            "src": "931:192:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1642,
        "src": "63:1062:4"
      }
    ],
    "src": "0:1125:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x16345B100d7cb74B6A474DcA52CCf0A1887C5059",
      "transactionHash": "0xde358c9f0bed2044f826cf317f4aa8dbf3d3d7dfd614302a6a5a476e58e019be"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-07-27T13:21:17.212Z",
  "devdoc": {
    "methods": {
      "buy(uint256,uint256)": {
        "params": {
          "_num": "The ticket number (0-4999)",
          "_passcode": "This is necessary to create random (1000-9999)"
        }
      },
      "buyWithIntroducer(uint256,uint256,address)": {
        "params": {
          "_num": "The ticket number (0-4999)",
          "_passcode": "This is necessary to create random (1000-9999)"
        }
      },
      "getNonSelectableNumbers(uint256,uint256)": {
        "params": {
          "_from": "more than equals",
          "_to": "less than equals"
        }
      },
      "getSelectableNumbers(uint256,uint256)": {
        "params": {
          "_from": "more than equals",
          "_to": "less than equals"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "buy(uint256,uint256)": {
        "notice": "A player can buy a ticket but the process still not be end"
      },
      "buyWithIntroducer(uint256,uint256,address)": {
        "notice": "A player can buy a ticket with introducer address"
      },
      "challenge()": {
        "notice": "It doesn't decide who is winner."
      }
    }
  }
}