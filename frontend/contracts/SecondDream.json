{
  "contractName": "SecondDream",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getRevealCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getIntroducedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getSeedIndex",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTerm",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "uint256"
        },
        {
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getNonSelectableNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "nextGame",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        }
      ],
      "name": "createCommitment",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "nextTerm",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "uint256"
        },
        {
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getSelectableNumbers",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "num",
          "type": "uint256"
        }
      ],
      "name": "setTicketTotal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWinner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBuyCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        }
      ],
      "name": "reveal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "drawWinner",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getNumbersOnRevealTerm",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_num",
          "type": "uint256"
        },
        {
          "name": "_passcode",
          "type": "uint256"
        },
        {
          "name": "_introducer",
          "type": "address"
        }
      ],
      "name": "buyWithIntroducer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getNumbersOnBuyTerm",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "player",
          "type": "address"
        }
      ],
      "name": "Challenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "challenge",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getApplicants",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "drawSecondDreamWinner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getRevealCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getIntroducedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getSeedIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getNonSelectableNumbers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"nextGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getApplicants\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"}],\"name\":\"createCommitment\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"nextTerm\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getSelectableNumbers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setTicketTotal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBuyCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drawSecondDreamWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drawWinner\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getNumbersOnRevealTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"challenge\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"},{\"name\":\"_passcode\",\"type\":\"uint256\"},{\"name\":\"_introducer\",\"type\":\"address\"}],\"name\":\"buyWithIntroducer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getNumbersOnBuyTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"buy(uint256,uint256)\":{\"params\":{\"_num\":\"The ticket number (0-4999)\",\"_passcode\":\"This is necessary to create random (1000-9999)\"}},\"buyWithIntroducer(uint256,uint256,address)\":{\"params\":{\"_num\":\"The ticket number (0-4999)\",\"_passcode\":\"This is necessary to create random (1000-9999)\"}},\"getNonSelectableNumbers(uint256,uint256)\":{\"params\":{\"_from\":\"more than equals\",\"_to\":\"less than equals\"}},\"getSelectableNumbers(uint256,uint256)\":{\"params\":{\"_from\":\"more than equals\",\"_to\":\"less than equals\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"buy(uint256,uint256)\":{\"notice\":\"A player can buy a ticket but the process still not be end\"},\"buyWithIntroducer(uint256,uint256,address)\":{\"notice\":\"A player can buy a ticket with introducer address\"},\"challenge()\":{\"notice\":\"It doesn't decide who is winner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol\":\"SecondDream\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/DreamTicket.sol\":{\"keccak256\":\"0xff333240eddfef1c6d7966f9f33e10e5ebf8900b46ac3609807ab3f41f22ba63\",\"urls\":[\"bzzr://f75598f45eecb46ce196119444d1eebcc6cb98304ca9f13e9e52d9e1389fc4f5\"]},\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/Ownable.sol\":{\"keccak256\":\"0xba01d97b2e93b0dbce9f3392a7e7dcb63067ba6abfa4b8b6d938804741055ca2\",\"urls\":[\"bzzr://6941b88e081dd5be6d9bd23da010a3dae9a56eeba7c015fa986ef386b3cc1ba2\"]},\"/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol\":{\"keccak256\":\"0x238c25c43de5a4d31851ae94be02be826f49f6658613830fc88060749b917523\",\"urls\":[\"bzzr://9b4cce8a7d2e775ad636b71f34abaadd2a0b5722f516d0e4b334b9d4e3a23ef9\"]}},\"version\":1}",
  "bytecode": "0x608060405266038d7ea4c68000600155611388600255336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360006008819055506100f06100f5640100000000026401000000009004565b61013f565b600860008154809291906001019190505550600060036000600854815260200190815260200160002081905550600060096000600854815260200190815260200160002081905550565b6123068061014e6000396000f3fe608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063020c6fed1461018557806303652dea146101b057806305eaf6d514610215578063124b65b41461022c5780631ab0435214610265578063281d62c4146102ff578063455772d214610316578063676e2680146103825780636f9fb98a146103fb578063715018a61461042657806381dda9fa1461043d578063871933e2146104545780638950ce0b146104ee5780638da5cb5b146105295780638e7ea5b2146105805780638f10fd45146105d75780638f32d59b1461060257806391b7f5ed146106315780639348cef71461066c57806398d5fdca146106b15780639f8743f7146106dc578063a111ece714610707578063b2185bb11461071e578063b93f9b0a14610728578063cd91b030146107a3578063d2ef739814610849578063d6febde814610853578063ed150e781461088b578063f2fde38b146108e3578063f4ff667114610934575b600080fd5b34801561019157600080fd5b5061019a6109da565b6040518082815260200191505060405180910390f35b3480156101bc57600080fd5b506101ff600480360360208110156101d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f7565b6040518082815260200191505060405180910390f35b34801561022157600080fd5b5061022a610a40565b005b34801561023857600080fd5b50610241610b01565b6040518082600281111561025157fe5b60ff16815260200191505060405180910390f35b34801561027157600080fd5b506102a86004803603604081101561028857600080fd5b810190808035906020019092919080359060200190929190505050610b18565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102eb5780820151818401526020810190506102d0565b505050509050019250505060405180910390f35b34801561030b57600080fd5b50610314610c6a565b005b34801561032257600080fd5b5061032b610cd5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561036e578082015181840152602081019050610353565b505050509050019250505060405180910390f35b34801561038e57600080fd5b506103e5600480360360608110156103a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610d76565b6040518082815260200191505060405180910390f35b34801561040757600080fd5b50610410610df3565b6040518082815260200191505060405180910390f35b34801561043257600080fd5b5061043b610e12565b005b34801561044957600080fd5b50610452610f4d565b005b34801561046057600080fd5b506104976004803603604081101561047757600080fd5b81019080803590602001909291908035906020019092919050505061106b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104da5780820151818401526020810190506104bf565b505050509050019250505060405180910390f35b3480156104fa57600080fd5b506105276004803603602081101561051157600080fd5b81019080803590602001909291905050506111b5565b005b34801561053557600080fd5b5061053e6111bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058c57600080fd5b506105956111e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e357600080fd5b506105ec611225565b6040518082815260200191505060405180910390f35b34801561060e57600080fd5b50610617611242565b604051808215151515815260200191505060405180910390f35b34801561063d57600080fd5b5061066a6004803603602081101561065457600080fd5b8101908080359060200190929190505050611299565b005b34801561067857600080fd5b506106af6004803603604081101561068f57600080fd5b8101908080359060200190929190803590602001909291905050506112a3565b005b3480156106bd57600080fd5b506106c6611533565b6040518082815260200191505060405180910390f35b3480156106e857600080fd5b506106f161153d565b6040518082815260200191505060405180910390f35b34801561071357600080fd5b5061071c611547565b005b61072661165b565b005b34801561073457600080fd5b506107616004803603602081101561074b57600080fd5b81019080803590602001909291905050506118f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107af57600080fd5b506107f2600480360360208110156107c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611942565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561083557808201518184015260208101905061081a565b505050509050019250505060405180910390f35b6108516119ec565b005b6108896004803603604081101561086957600080fd5b810190808035906020019092919080359060200190929190505050611c89565b005b6108e1600480360360608110156108a157600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eab565b005b3480156108ef57600080fd5b506109326004803603602081101561090657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f44565b005b34801561094057600080fd5b506109836004803603602081101561095757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fcc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156109c65780820151818401526020810190506109ab565b505050509050019250505060405180910390f35b600060096000600854815260200190815260200160002054905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600254600c600060085481526020019081526020016000205460019004811515610a6857fe5b069050600073ffffffffffffffffffffffffffffffffffffffff16600a60006008548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610afe578080600101915050600254811115610afd57600090505b5b50565b6000600760009054906101000a900460ff16905090565b60608183101515610b2857600080fd5b60006001610b368585612076565b858503030190506000809050606082604051908082528060200260200182016040528015610b735781602001602082028038833980820191505090505b50905060008690505b8581111515610c5d5760007f0100000000000000000000000000000000000000000000000000000000000000026004600060085481526020019081526020016000206000838152602001908152602001600020546000602081101515610bde57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515610c5057808284815181101515610c3957fe5b906020019060200201818152505082806001019350505b8080600101915050610b7c565b5080935050505092915050565b600280811115610c7657fe5b600760009054906101000a900460ff166002811115610c9157fe5b141515610c9d57600080fd5b6008600081548092919060010191905055506000600760006101000a81548160ff02191690836002811115610cce57fe5b0217905550565b6060600e60006008548152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d6c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d22575b5050505050905090565b6000838383604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182815260200193505050506040516020818303038152906040528051906020012090509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b610e1a611242565b1515610e8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006002811115610f5a57fe5b600760009054906101000a900460ff166002811115610f7557fe5b1480610fa6575060016002811115610f8957fe5b600760009054906101000a900460ff166002811115610fa457fe5b145b1515610fb157600080fd5b60006002811115610fbe57fe5b600760009054906101000a900460ff166002811115610fd957fe5b1415611008576001600760006101000a81548160ff02191690836002811115610ffe57fe5b0217905550611069565b6001600281111561101557fe5b600760009054906101000a900460ff16600281111561103057fe5b1415611067576002600760006101000a81548160ff0219169083600281111561105557fe5b021790555061106261165b565b611068565b5b5b565b6060818310151561107b57600080fd5b60006110878484612076565b905060008090506060826040519080825280602002602001820160405280156110bf5781602001602082028038833980820191505090505b50905060008690505b85811115156111a85760007f010000000000000000000000000000000000000000000000000000000000000002600460006008548152602001908152602001600020600083815260200190815260200160002054600060208110151561112a57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561119b5780828481518110151561118457fe5b906020019060200201818152505082806001019350505b80806001019150506110c8565b5080935050505092915050565b8060028190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600d6000600854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060036000600854815260200190815260200160002054905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b8060018190555050565b600160028111156112b057fe5b600760009054906101000a900460ff1660028111156112cb57fe5b1415156112d757600080fd5b60006112e4338484610d76565b90508060046000600854815260200190815260200160002060008581526020019081526020016000205414151561131a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a60006008548152602001908152602001600020600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561139b57600080fd5b600c600060085481526020019081526020016000205481604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120600c60006008548152602001908152602001600020819055506009600060085481526020019081526020016000206000815480929190600101919050555033600a60006008548152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b6000600854815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083908060018154018082558091505090600182039060005260206000200160009091929091909150555060025460096000600854815260200190815260200160002054141561152e57611525610f4d565b61152d61165b565b5b505050565b6000600154905090565b6000600854905090565b60028081111561155357fe5b600760009054906101000a900460ff16600281111561156e57fe5b14151561157a57600080fd5b600060106000600854815260200190815260200160002054600f6000600854815260200190815260200160002054600190048115156115b557fe5b069050600e60006008548152602001908152602001600020818154811015156115da57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660116000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60028081111561166757fe5b600760009054906101000a900460ff16600281111561168257fe5b14151561168e57600080fd5b6000600254600c6000600854815260200190815260200160002054600190048115156116b657fe5b0690505b600073ffffffffffffffffffffffffffffffffffffffff16600a60006008548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561175157808060010191505060025481111561174c57600090505b6116ba565b600a60006008548152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d6000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117f36111bf565b73ffffffffffffffffffffffffffffffffffffffff166108fc60033073ffffffffffffffffffffffffffffffffffffffff163181151561182f57fe5b049081150290604051600060405180830381858888f1935050505015801561185b573d6000803e3d6000fd5b50600d6000600854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156118ee573d6000803e3d6000fd5b5050565b6000600a60006008548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600b6000600854815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156119e057602002820191906000526020600020905b8154815260200190600101908083116119cc575b50505050509050919050565b600060028111156119f957fe5b600760009054906101000a900460ff166002811115611a1457fe5b1480611a45575060016002811115611a2857fe5b600760009054906101000a900460ff166002811115611a4357fe5b145b1515611a5057600080fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515611a9e57600080fd5b600e600060085481526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600f600060085481526020019081526020016000205433604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405160208183030381529060405280519060200120600f6000600854815260200190815260200160002081905550601060006008548152602001908152602001600020600081548092919060010191905055507fc21b87340588bdc78634253d4b0c2c02f475010edc0dc0c201bb0db913fa51a033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60015434141515611c9957600080fd5b60008210158015611cab575060025482105b1515611cb657600080fd5b60006002811115611cc357fe5b600760009054906101000a900460ff166002811115611cde57fe5b141515611cea57600080fd5b6000600102600460006008548152602001908152602001600020600084815260200190815260200160002054141515611d2257600080fd5b6103e88110158015611d35575061271081105b1515611d4057600080fd5b600360006008548152602001908152602001600020600081548092919060010191905055506000611d72338484610d76565b90508060046000600854815260200190815260200160002060008581526020019081526020016000208190555060056000600854815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190915055507f5c6c890314aa0d49059c35b35ff86ffb43efe8f543dc3691558f39dfa4a8201133604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600254600360006008548152602001908152602001600020541415611ea657611ea5610f4d565b5b505050565b611eb58383611c89565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515611ef057600080fd5b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550505050565b611f4c611242565b1515611fc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611fc981612151565b50565b606060056000600854815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561206a57602002820191906000526020600020905b815481526020019060010190808311612056575b50505050509050919050565b6000806000905060008490505b83811115156121465760007f01000000000000000000000000000000000000000000000000000000000000000260046000600854815260200190815260200160002060008381526020019081526020016000205460006020811015156120e557fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156121395781806001019250505b8080600101915050612083565b508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561221c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820132a6e6766cddb5acd6c87fe7cb26cdc8e16b7bc7aca0bba59b081799c80015a0029",
  "deployedBytecode": "0x608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063020c6fed1461018557806303652dea146101b057806305eaf6d514610215578063124b65b41461022c5780631ab0435214610265578063281d62c4146102ff578063455772d214610316578063676e2680146103825780636f9fb98a146103fb578063715018a61461042657806381dda9fa1461043d578063871933e2146104545780638950ce0b146104ee5780638da5cb5b146105295780638e7ea5b2146105805780638f10fd45146105d75780638f32d59b1461060257806391b7f5ed146106315780639348cef71461066c57806398d5fdca146106b15780639f8743f7146106dc578063a111ece714610707578063b2185bb11461071e578063b93f9b0a14610728578063cd91b030146107a3578063d2ef739814610849578063d6febde814610853578063ed150e781461088b578063f2fde38b146108e3578063f4ff667114610934575b600080fd5b34801561019157600080fd5b5061019a6109da565b6040518082815260200191505060405180910390f35b3480156101bc57600080fd5b506101ff600480360360208110156101d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f7565b6040518082815260200191505060405180910390f35b34801561022157600080fd5b5061022a610a40565b005b34801561023857600080fd5b50610241610b01565b6040518082600281111561025157fe5b60ff16815260200191505060405180910390f35b34801561027157600080fd5b506102a86004803603604081101561028857600080fd5b810190808035906020019092919080359060200190929190505050610b18565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102eb5780820151818401526020810190506102d0565b505050509050019250505060405180910390f35b34801561030b57600080fd5b50610314610c6a565b005b34801561032257600080fd5b5061032b610cd5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561036e578082015181840152602081019050610353565b505050509050019250505060405180910390f35b34801561038e57600080fd5b506103e5600480360360608110156103a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610d76565b6040518082815260200191505060405180910390f35b34801561040757600080fd5b50610410610df3565b6040518082815260200191505060405180910390f35b34801561043257600080fd5b5061043b610e12565b005b34801561044957600080fd5b50610452610f4d565b005b34801561046057600080fd5b506104976004803603604081101561047757600080fd5b81019080803590602001909291908035906020019092919050505061106b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104da5780820151818401526020810190506104bf565b505050509050019250505060405180910390f35b3480156104fa57600080fd5b506105276004803603602081101561051157600080fd5b81019080803590602001909291905050506111b5565b005b34801561053557600080fd5b5061053e6111bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058c57600080fd5b506105956111e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e357600080fd5b506105ec611225565b6040518082815260200191505060405180910390f35b34801561060e57600080fd5b50610617611242565b604051808215151515815260200191505060405180910390f35b34801561063d57600080fd5b5061066a6004803603602081101561065457600080fd5b8101908080359060200190929190505050611299565b005b34801561067857600080fd5b506106af6004803603604081101561068f57600080fd5b8101908080359060200190929190803590602001909291905050506112a3565b005b3480156106bd57600080fd5b506106c6611533565b6040518082815260200191505060405180910390f35b3480156106e857600080fd5b506106f161153d565b6040518082815260200191505060405180910390f35b34801561071357600080fd5b5061071c611547565b005b61072661165b565b005b34801561073457600080fd5b506107616004803603602081101561074b57600080fd5b81019080803590602001909291905050506118f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107af57600080fd5b506107f2600480360360208110156107c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611942565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561083557808201518184015260208101905061081a565b505050509050019250505060405180910390f35b6108516119ec565b005b6108896004803603604081101561086957600080fd5b810190808035906020019092919080359060200190929190505050611c89565b005b6108e1600480360360608110156108a157600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eab565b005b3480156108ef57600080fd5b506109326004803603602081101561090657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f44565b005b34801561094057600080fd5b506109836004803603602081101561095757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fcc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156109c65780820151818401526020810190506109ab565b505050509050019250505060405180910390f35b600060096000600854815260200190815260200160002054905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600254600c600060085481526020019081526020016000205460019004811515610a6857fe5b069050600073ffffffffffffffffffffffffffffffffffffffff16600a60006008548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610afe578080600101915050600254811115610afd57600090505b5b50565b6000600760009054906101000a900460ff16905090565b60608183101515610b2857600080fd5b60006001610b368585612076565b858503030190506000809050606082604051908082528060200260200182016040528015610b735781602001602082028038833980820191505090505b50905060008690505b8581111515610c5d5760007f0100000000000000000000000000000000000000000000000000000000000000026004600060085481526020019081526020016000206000838152602001908152602001600020546000602081101515610bde57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515610c5057808284815181101515610c3957fe5b906020019060200201818152505082806001019350505b8080600101915050610b7c565b5080935050505092915050565b600280811115610c7657fe5b600760009054906101000a900460ff166002811115610c9157fe5b141515610c9d57600080fd5b6008600081548092919060010191905055506000600760006101000a81548160ff02191690836002811115610cce57fe5b0217905550565b6060600e60006008548152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d6c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d22575b5050505050905090565b6000838383604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182815260200193505050506040516020818303038152906040528051906020012090509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b610e1a611242565b1515610e8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006002811115610f5a57fe5b600760009054906101000a900460ff166002811115610f7557fe5b1480610fa6575060016002811115610f8957fe5b600760009054906101000a900460ff166002811115610fa457fe5b145b1515610fb157600080fd5b60006002811115610fbe57fe5b600760009054906101000a900460ff166002811115610fd957fe5b1415611008576001600760006101000a81548160ff02191690836002811115610ffe57fe5b0217905550611069565b6001600281111561101557fe5b600760009054906101000a900460ff16600281111561103057fe5b1415611067576002600760006101000a81548160ff0219169083600281111561105557fe5b021790555061106261165b565b611068565b5b5b565b6060818310151561107b57600080fd5b60006110878484612076565b905060008090506060826040519080825280602002602001820160405280156110bf5781602001602082028038833980820191505090505b50905060008690505b85811115156111a85760007f010000000000000000000000000000000000000000000000000000000000000002600460006008548152602001908152602001600020600083815260200190815260200160002054600060208110151561112a57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561119b5780828481518110151561118457fe5b906020019060200201818152505082806001019350505b80806001019150506110c8565b5080935050505092915050565b8060028190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600d6000600854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060036000600854815260200190815260200160002054905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b8060018190555050565b600160028111156112b057fe5b600760009054906101000a900460ff1660028111156112cb57fe5b1415156112d757600080fd5b60006112e4338484610d76565b90508060046000600854815260200190815260200160002060008581526020019081526020016000205414151561131a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a60006008548152602001908152602001600020600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561139b57600080fd5b600c600060085481526020019081526020016000205481604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120600c60006008548152602001908152602001600020819055506009600060085481526020019081526020016000206000815480929190600101919050555033600a60006008548152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b6000600854815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083908060018154018082558091505090600182039060005260206000200160009091929091909150555060025460096000600854815260200190815260200160002054141561152e57611525610f4d565b61152d61165b565b5b505050565b6000600154905090565b6000600854905090565b60028081111561155357fe5b600760009054906101000a900460ff16600281111561156e57fe5b14151561157a57600080fd5b600060106000600854815260200190815260200160002054600f6000600854815260200190815260200160002054600190048115156115b557fe5b069050600e60006008548152602001908152602001600020818154811015156115da57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660116000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60028081111561166757fe5b600760009054906101000a900460ff16600281111561168257fe5b14151561168e57600080fd5b6000600254600c6000600854815260200190815260200160002054600190048115156116b657fe5b0690505b600073ffffffffffffffffffffffffffffffffffffffff16600a60006008548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561175157808060010191505060025481111561174c57600090505b6116ba565b600a60006008548152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d6000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117f36111bf565b73ffffffffffffffffffffffffffffffffffffffff166108fc60033073ffffffffffffffffffffffffffffffffffffffff163181151561182f57fe5b049081150290604051600060405180830381858888f1935050505015801561185b573d6000803e3d6000fd5b50600d6000600854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156118ee573d6000803e3d6000fd5b5050565b6000600a60006008548152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600b6000600854815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156119e057602002820191906000526020600020905b8154815260200190600101908083116119cc575b50505050509050919050565b600060028111156119f957fe5b600760009054906101000a900460ff166002811115611a1457fe5b1480611a45575060016002811115611a2857fe5b600760009054906101000a900460ff166002811115611a4357fe5b145b1515611a5057600080fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515611a9e57600080fd5b600e600060085481526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600f600060085481526020019081526020016000205433604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405160208183030381529060405280519060200120600f6000600854815260200190815260200160002081905550601060006008548152602001908152602001600020600081548092919060010191905055507fc21b87340588bdc78634253d4b0c2c02f475010edc0dc0c201bb0db913fa51a033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60015434141515611c9957600080fd5b60008210158015611cab575060025482105b1515611cb657600080fd5b60006002811115611cc357fe5b600760009054906101000a900460ff166002811115611cde57fe5b141515611cea57600080fd5b6000600102600460006008548152602001908152602001600020600084815260200190815260200160002054141515611d2257600080fd5b6103e88110158015611d35575061271081105b1515611d4057600080fd5b600360006008548152602001908152602001600020600081548092919060010191905055506000611d72338484610d76565b90508060046000600854815260200190815260200160002060008581526020019081526020016000208190555060056000600854815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190915055507f5c6c890314aa0d49059c35b35ff86ffb43efe8f543dc3691558f39dfa4a8201133604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600254600360006008548152602001908152602001600020541415611ea657611ea5610f4d565b5b505050565b611eb58383611c89565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515611ef057600080fd5b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550505050565b611f4c611242565b1515611fc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611fc981612151565b50565b606060056000600854815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561206a57602002820191906000526020600020905b815481526020019060010190808311612056575b50505050509050919050565b6000806000905060008490505b83811115156121465760007f01000000000000000000000000000000000000000000000000000000000000000260046000600854815260200190815260200160002060008381526020019081526020016000205460006020811015156120e557fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156121395781806001019250505b8080600101915050612083565b508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561221c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820132a6e6766cddb5acd6c87fe7cb26cdc8e16b7bc7aca0bba59b081799c80015a0029",
  "sourceMap": "63:990:4:-;;;454:4:1;426:32;;547:4;519:32;;683:10:3;674:6;;:19;;;;;;;;;;;;;;;;;;741:6;;;;;;;;;;;708:40;;737:1;708:40;;;;;;;;;;;;1683:1:1;1675:5;:9;;;;1690:13;:11;;;:13;;;:::i;:::-;63:990:4;;1749:102:1;1786:5;;:7;;;;;;;;;;;;;1817:1;1799:8;:15;1808:5;;1799:15;;;;;;;;;;;:19;;;;1845:1;1824:11;:18;1836:5;;1824:18;;;;;;;;;;;:22;;;;1749:102::o;63:990:4:-;;;;;;;",
  "deployedSourceMap": "63:990:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4777:89:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4777:89:1;;;;;;;;;;;;;;;;;;;;;;;4506:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4506:106:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4506:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4263:239;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4263:239:1;;;;;;5543:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5543:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6251:427;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6251:427:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6251:427:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6251:427:1;;;;;;;;;;;;;;;;;6936:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6936:117:1;;;;;;756:99:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;756:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;756:99:4;;;;;;;;;;;;;;;;;3057:167:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3057:167:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3057:167:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7324:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7324:96:1;;;;;;;;;;;;;;;;;;;;;;;1624:137:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1624:137:3;;;;;;5263:276:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5263:276:1;;;;;;5771:406;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5771:406:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5771:406:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5771:406:1;;;;;;;;;;;;;;;;;7212:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7212:108:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7212:108:1;;;;;;;;;;;;;;;;;;;;831:85:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;831:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;5615:82:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5615:82:1;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4690:83:1;;;;;;;;;;;;;;;;;;;;;;;1190:90:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1190:90:3;;;;;;;;;;;;;;;;;;;;;;;;;;;7057:69:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7057:69:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7057:69:1;;;;;;;;;;;;;;;;;;;;3229:582;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3229:582:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3229:582:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7130:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7130:78:1;;;;;;;;;;;;;;;;;;;;;;;4616:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4616:70:1;;;;;;;;;;;;;;;;;;;;;;;859:192:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;859:192:4;;;;;;3815:444:1;;;;;;4870:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4870:101:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4870:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5116:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5116:143:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5116:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5116:143:1;;;;;;;;;;;;;;;;;412:340:4;;;;;;2043:602:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2043:602:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2828:222;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2828:222:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:115:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1910:115:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:115:3;;;;;;;;;;;;;;;;;;;;;;4975:137:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4975:137:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4975:137:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4975:137:1;;;;;;;;;;;;;;;;;4777:89;4824:4;4843:11;:18;4855:5;;4843:18;;;;;;;;;;;;4836:25;;4777:89;:::o;4506:106::-;4570:4;4589:11;:18;4601:5;4589:18;;;;;;;;;;;;;;;;4582:25;;4506:106;;;:::o;4263:239::-;4301:14;4338:12;;4323:4;:11;4328:5;;4323:11;;;;;;;;;;;;4318:17;;;:32;;;;;;;;4301:49;;4399:1;4360:41;;:9;:16;4370:5;;4360:16;;;;;;;;;;;:27;4377:9;4360:27;;;;;;;;;;;;;;;;;;;;;:41;;;4356:142;;;4411:11;;;;;;;4446:12;;4434:9;:24;4430:62;;;4482:1;4470:13;;4430:62;4356:142;4263:239;:::o;5543:68::-;5583:4;5602;;;;;;;;;;;5595:11;;5543:68;:::o;6251:427::-;6327:13;6364:3;6356:5;:11;6348:20;;;;;;;;6374:9;6429:1;6400:26;6415:5;6422:3;6400:14;:26::i;:::-;6392:5;6386:3;:11;:40;:44;6374:56;;6436:6;6445:1;6436:10;;6452:21;6487:4;6476:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6476:16:1;;;;6452:40;;6503:11;6517:5;6503:19;;6498:156;6534:3;6524:6;:13;;6498:156;;;6594:1;6561:34;;:11;:18;6573:5;;6561:18;;;;;;;;;;;:26;6580:6;6561:26;;;;;;;;;;;;6588:1;6561:29;;;;;;;;;;;;:34;;;;;6557:91;;;6620:6;6607:7;6615:1;6607:10;;;;;;;;;;;;;;;;;:19;;;;;6636:3;;;;;;;6557:91;6539:8;;;;;;;6498:156;;;;6666:7;6659:14;;;;;6251:427;;;;:::o;6936:117::-;7002:11;6994:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;6986:28;;;;;;;;7020:5;;:7;;;;;;;;;;;;;7040:8;7033:4;;:15;;;;;;;;;;;;;;;;;;;;;;;;6936:117::o;756:99:4:-;802:16;833:10;:17;844:5;;833:17;;;;;;;;;;;826:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:99;:::o;3057:167:1:-;3146:7;3195:5;3202:4;3208:9;3178:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3178:40:1;;;3168:51;;;;;;3161:58;;3057:167;;;;;:::o;7324:96::-;7375:4;7402;7394:21;;;7387:28;;7324:96;:::o;1624:137:3:-;1043:9;:7;:9::i;:::-;1035:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:1;1685:40;;1706:6;;;;;;;;;;;1685:40;;;;;;;;;;;;1752:1;1735:6;;:19;;;;;;;;;;;;;;;;;;1624:137::o;5263:276:1:-;5328:8;5320:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;:39;;;;5348:11;5340:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;5320:39;5312:48;;;;;;;;5378:8;5370:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;5366:169;;;5403:11;5396:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;5366:169;;;5439:11;5431:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;5427:108;;;5467:11;5460:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;5486:12;:10;:12::i;:::-;5427:108;;;;5366:169;5263:276::o;5771:406::-;5844:13;5881:3;5873:5;:11;5865:20;;;;;;;;5891:9;5903:26;5918:5;5925:3;5903:14;:26::i;:::-;5891:38;;5935:6;5944:1;5935:10;;5951:21;5986:4;5975:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5975:16:1;;;;5951:40;;6002:11;6016:5;6002:19;;5997:156;6033:3;6023:6;:13;;5997:156;;;6093:1;6060:34;;:11;:18;6072:5;;6060:18;;;;;;;;;;;:26;6079:6;6060:26;;;;;;;;;;;;6087:1;6060:29;;;;;;;;;;;;:34;;;;6056:91;;;6119:6;6106:7;6114:1;6106:10;;;;;;;;;;;;;;;;;:19;;;;;6135:3;;;;;;;6056:91;6038:8;;;;;;;5997:156;;;;6165:7;6158:14;;;;;5771:406;;;;:::o;7212:108::-;7312:3;7297:12;:18;;;;7212:108;:::o;831:85:3:-;869:15;903:6;;;;;;;;;;;896:13;;831:85;:::o;5615:82:1:-;5657:7;5679:6;:13;5686:5;;5679:13;;;;;;;;;;;;;;;;;;;;;5672:20;;5615:82;:::o;4690:83::-;4734:4;4753:8;:15;4762:5;;4753:15;;;;;;;;;;;;4746:22;;4690:83;:::o;1190:90:3:-;1230:4;1267:6;;;;;;;;;;;1253:20;;:10;:20;;;1246:27;;1190:90;:::o;7057:69:1:-;7116:5;7101:12;:20;;;;7057:69;:::o;3229:582::-;3302:11;3294:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;3286:28;;;;;;;;3325:18;3346:45;3363:10;3375:4;3381:9;3346:16;:45::i;:::-;3325:66;;3433:10;3405:11;:18;3417:5;;3405:18;;;;;;;;;;;:24;3424:4;3405:24;;;;;;;;;;;;:38;3397:47;;;;;;;;3506:10;3480:36;;:9;:16;3490:5;;3480:16;;;;;;;;;;;:22;3497:4;3480:22;;;;;;;;;;;;;;;;;;;;;:36;;;;3472:45;;;;;;;;3565:4;:11;3570:5;;3565:11;;;;;;;;;;;;3578:10;3548:41;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3548:41:1;;;3538:52;;;;;;3524:4;:11;3529:5;;3524:11;;;;;;;;;;;:66;;;;3596:11;:18;3608:5;;3596:18;;;;;;;;;;;;:20;;;;;;;;;;;;;3647:10;3622:9;:16;3632:5;;3622:16;;;;;;;;;;;:22;3639:4;3622:22;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;3663:22;:29;3686:5;;3663:29;;;;;;;;;;;:41;3693:10;3663:41;;;;;;;;;;;;;;;3710:4;3663:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3663:52:1;;;;;;;;;;;;;;;;;;;;;;3748:12;;3726:11;:18;3738:5;;3726:18;;;;;;;;;;;;:34;3722:85;;;3770:10;:8;:10::i;:::-;3788:12;:10;:12::i;:::-;3722:85;3229:582;;;:::o;7130:78::-;7172:4;7191:12;;7184:19;;7130:78;:::o;4616:70::-;4657:4;4676:5;;4669:12;;4616:70;:::o;859:192:4:-;921:11;913:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;905:28;;;;;;;;939:14;976:13;:20;990:5;;976:20;;;;;;;;;;;;961:4;:11;966:5;;961:11;;;;;;;;;;;;956:17;;;:40;;;;;;;;939:57;;1018:10;:17;1029:5;;1018:17;;;;;;;;;;;1036:9;1018:28;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:6;:13;1009:5;;1002:13;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;859:192;:::o;3815:444:1:-;3888:11;3880:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;3872:28;;;;;;;;3906:14;3943:12;;3928:4;:11;3933:5;;3928:11;;;;;;;;;;;;3923:17;;;:32;;;;;;;;3906:49;;3961:145;4007:1;3968:41;;:9;:16;3978:5;;3968:16;;;;;;;;;;;:27;3985:9;3968:27;;;;;;;;;;;;;;;;;;;;;:41;;;3961:145;;;4019:11;;;;;;;4054:12;;4042:9;:24;4038:62;;;4090:1;4078:13;;4038:62;3961:145;;;4127:9;:16;4137:5;;4127:16;;;;;;;;;;;:27;4144:9;4127:27;;;;;;;;;;;;;;;;;;;;;4111:6;:13;4118:5;;4111:13;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;4160:7;:5;:7::i;:::-;:16;;:43;4201:1;4185:4;4177:21;;;:25;;;;;;;;4160:43;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4160:43:1;4209:6;:13;4216:5;;4209:13;;;;;;;;;;;;;;;;;;;;;:22;;:45;4240:4;4232:21;;;4209:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4209:45:1;3815:444;:::o;4870:101::-;4922:7;4944:9;:16;4954:5;;4944:16;;;;;;;;;;;:22;4961:4;4944:22;;;;;;;;;;;;;;;;;;;;;4937:29;;4870:101;;;:::o;5116:143::-;5187:13;5215:22;:29;5238:5;;5215:29;;;;;;;;;;;:39;5245:8;5215:39;;;;;;;;;;;;;;;5208:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5116:143;;;:::o;412:340:4:-;470:8;462:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;:39;;;;490:11;482:19;;;;;;;;:4;;;;;;;;;;;:19;;;;;;;;;462:39;454:48;;;;;;;;542:1;516:11;:23;528:10;516:23;;;;;;;;;;;;;;;;:27;508:36;;;;;;;;550:10;:17;561:5;;550:17;;;;;;;;;;;573:10;550:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;550:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:11;:23;602:10;590:23;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;662:4;:11;667:5;;662:11;;;;;;;;;;;;675:10;645:41;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;645:41:4;;;635:52;;;;;;621:4;:11;626:5;;621:11;;;;;;;;;;;:66;;;;693:13;:20;707:5;;693:20;;;;;;;;;;;;:22;;;;;;;;;;;;;726:21;736:10;726:21;;;;;;;;;;;;;;;;;;;;;;412:340::o;2043:602:1:-;2126:12;;2113:9;:25;2105:34;;;;;;;;2161:1;2153:4;:9;;:32;;;;;2173:12;;2166:4;:19;2153:32;2145:41;;;;;;;;2208:8;2200:16;;;;;;;;:4;;;;;;;;;;;:16;;;;;;;;;2192:25;;;;;;;;2259:1;2231:29;;:11;:18;2243:5;;2231:18;;;;;;;;;;;:24;2250:4;2231:24;;;;;;;;;;;;:29;2223:38;;;;;;;;2288:4;2275:9;:17;;:38;;;;;2308:5;2296:9;:17;2275:38;2267:47;;;;;;;;2321:8;:15;2330:5;;2321:15;;;;;;;;;;;;:17;;;;;;;;;;;;;2345:18;2366:45;2383:10;2395:4;2401:9;2366:16;:45::i;:::-;2345:66;;2444:10;2417:11;:18;2429:5;;2417:18;;;;;;;;;;;:24;2436:4;2417:24;;;;;;;;;;;:37;;;;2460:19;:26;2480:5;;2460:26;;;;;;;;;;;:38;2487:10;2460:38;;;;;;;;;;;;;;;2504:4;2460:49;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2460:49:1;;;;;;;;;;;;;;;;;;;;;;2521:15;2525:10;2521:15;;;;;;;;;;;;;;;;;;;;;;2566:12;;2547:8;:15;2556:5;;2547:15;;;;;;;;;;;;:31;2543:98;;;2588:10;:8;:10::i;:::-;2543:98;2043:602;;;:::o;2828:222::-;2924:20;2928:4;2934:9;2924:3;:20::i;:::-;2972:11;2958:25;;:10;:25;;;;2950:34;;;;;;;;2990:11;:24;3002:11;2990:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;2828:222;;;:::o;1910:115:3:-;1043:9;:7;:9::i;:::-;1035:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1990:28;2009:8;1990:18;:28::i;:::-;1910:115;:::o;4975:137:1:-;5043:13;5071:19;:26;5091:5;;5071:26;;;;;;;;;;;:36;5098:8;5071:36;;;;;;;;;;;;;;;5064:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4975:137;;;:::o;6682:250::-;6750:4;6762:9;6774:1;6762:13;;6786:11;6800:5;6786:19;;6781:130;6817:3;6807:6;:13;;6781:130;;;6877:1;6844:34;;:11;:18;6856:5;;6844:18;;;;;;;;;;;:26;6863:6;6844:26;;;;;;;;;;;;6871:1;6844:29;;;;;;;;;;;;:34;;;;6840:65;;;6890:6;;;;;;;6840:65;6822:8;;;;;;;6781:130;;;;6923:4;6916:11;;;6682:250;;;;:::o;2126:233:3:-;2227:1;2207:22;;:8;:22;;;;2199:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:8;2287:38;;2308:6;;;;;;;;;;;2287:38;;;;;;;;;;;;2344:8;2335:6;;:17;;;;;;;;;;;;;;;;;;2126:233;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./DreamTicket.sol\";\n\ncontract SecondDream is DreamTicket {\n\n  // TODO: write test code\n  \n  event Challenge(\n    address player\n  );\n\n  mapping(uint => address[]) private applicants;\n\n  mapping(uint => bytes32) private seed;\n\n  mapping(uint => uint) private applicantsNum;\n\n  mapping(uint => address) private winner;\n\n  /**\n   * It doesn't decide who is winner.\n   */\n  function challenge() public payable {\n    require(term == Term.BUY || term == Term.REVEAL);\n    require(introducers[msg.sender] > 0);\n    applicants[round].push(msg.sender);\n    introducers[msg.sender]--;\n    seed[round] = keccak256(abi.encodePacked(seed[round], msg.sender));\n    applicantsNum[round]++;\n    emit Challenge(msg.sender);\n  }\n\n  function getApplicants() public view returns (address[] memory) {\n    return applicants[round];\n  }\n\n  function drawSecondDreamWinner() public {\n    require(term == Term.RESULT);\n    uint seedIndex = uint(seed[round]) % applicantsNum[round];\n    winner[round] = applicants[round][seedIndex];\n  }\n}",
  "sourcePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol",
  "ast": {
    "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol",
    "exportedSymbols": {
      "SecondDream": [
        1505
      ]
    },
    "id": 1506,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1372,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:4"
      },
      {
        "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/DreamTicket.sol",
        "file": "./DreamTicket.sol",
        "id": 1373,
        "nodeType": "ImportDirective",
        "scope": 1506,
        "sourceUnit": 1203,
        "src": "34:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1374,
              "name": "DreamTicket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1202,
              "src": "87:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DreamTicket_$1202",
                "typeString": "contract DreamTicket"
              }
            },
            "id": 1375,
            "nodeType": "InheritanceSpecifier",
            "src": "87:11:4"
          }
        ],
        "contractDependencies": [
          1202,
          1370
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1505,
        "linearizedBaseContracts": [
          1505,
          1202,
          1370
        ],
        "name": "SecondDream",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1379,
            "name": "Challenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "indexed": false,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "155:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "149:24:4"
            },
            "src": "134:40:4"
          },
          {
            "constant": false,
            "id": 1384,
            "name": "applicants",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "178:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 1383,
              "keyType": {
                "id": 1380,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "186:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "178:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1381,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "194:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1382,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "194:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1388,
            "name": "seed",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "228:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 1387,
              "keyType": {
                "id": 1385,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "236:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "228:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 1386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1392,
            "name": "applicantsNum",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "270:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1391,
              "keyType": {
                "id": 1389,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "278:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "270:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1390,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "286:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1396,
            "name": "winner",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "318:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1395,
              "keyType": {
                "id": 1393,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "326:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "318:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1394,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "334:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "448:304:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1400,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "462:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1401,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "470:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BUY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "470:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "462:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1404,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "482:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1405,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "490:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "REVEAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "490:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "482:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "462:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1523,
                        1524
                      ],
                      "referencedDeclaration": 1523,
                      "src": "454:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1410,
                  "nodeType": "ExpressionStatement",
                  "src": "454:48:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1412,
                            "name": "introducers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "516:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1415,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1520,
                              "src": "528:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "528:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "516:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "542:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "516:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1523,
                        1524
                      ],
                      "referencedDeclaration": 1523,
                      "src": "508:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "508:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "573:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "573:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1420,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "550:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1422,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1421,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "561:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "550:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "550:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1427,
                  "nodeType": "ExpressionStatement",
                  "src": "550:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "590:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "introducers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "590:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1431,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1429,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "602:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "602:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "590:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1433,
                  "nodeType": "ExpressionStatement",
                  "src": "590:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1434,
                        "name": "seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "621:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 1436,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1435,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "626:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "621:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1440,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "662:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 1442,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1441,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 397,
                                "src": "667:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "662:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1443,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1520,
                                "src": "675:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "675:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1438,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1507,
                              "src": "645:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "645:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "645:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1437,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1514,
                        "src": "635:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "635:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "621:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "621:66:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "693:22:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "693:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1451,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1450,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "707:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "693:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1453,
                  "nodeType": "ExpressionStatement",
                  "src": "693:22:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1455,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "736:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "736:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1454,
                      "name": "Challenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1379,
                      "src": "726:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "EmitStatement",
                  "src": "721:26:4"
                }
              ]
            },
            "documentation": "It doesn't decide who is winner.",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:2:4"
            },
            "returnParameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:0:4"
            },
            "scope": 1505,
            "src": "412:340:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "820:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1466,
                      "name": "applicants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1384,
                      "src": "833:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(uint256 => address[] storage ref)"
                      }
                    },
                    "id": 1468,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1467,
                      "name": "round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "844:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "833:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1465,
                  "id": 1469,
                  "nodeType": "Return",
                  "src": "826:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 1471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApplicants",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:2:4"
            },
            "returnParameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1464,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "802:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1462,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "802:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1463,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "802:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:18:4"
            },
            "scope": 1505,
            "src": "756:99:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1503,
              "nodeType": "Block",
              "src": "899:152:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Term_$366",
                          "typeString": "enum DreamTicket.Term"
                        },
                        "id": 1478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1475,
                          "name": "term",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "913:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1476,
                            "name": "Term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "921:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                              "typeString": "type(enum DreamTicket.Term)"
                            }
                          },
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RESULT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "921:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "src": "913:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1523,
                        1524
                      ],
                      "referencedDeclaration": 1523,
                      "src": "905:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1480,
                  "nodeType": "ExpressionStatement",
                  "src": "905:28:4"
                },
                {
                  "assignments": [
                    1482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1482,
                      "name": "seedIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1503,
                      "src": "939:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "939:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1492,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1484,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "961:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 1486,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1485,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "966:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "961:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "956:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "956:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1488,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "976:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1490,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1489,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "990:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "976:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "956:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "939:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1396,
                        "src": "1002:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1495,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "1009:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1002:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1496,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "1018:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1498,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1497,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "1029:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1018:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1500,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1499,
                        "name": "seedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1482,
                        "src": "1036:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1018:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1002:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:44:4"
                }
              ]
            },
            "documentation": null,
            "id": 1504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drawSecondDreamWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:2:4"
            },
            "returnParameters": {
              "id": 1473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:4"
            },
            "scope": 1505,
            "src": "859:192:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1506,
        "src": "63:990:4"
      }
    ],
    "src": "0:1053:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/SecondDream.sol",
    "exportedSymbols": {
      "SecondDream": [
        1505
      ]
    },
    "id": 1506,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1372,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:4"
      },
      {
        "absolutePath": "/Users/koikeshunpei/Dev/04_lottery/dapp/contracts/DreamTicket.sol",
        "file": "./DreamTicket.sol",
        "id": 1373,
        "nodeType": "ImportDirective",
        "scope": 1506,
        "sourceUnit": 1203,
        "src": "34:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1374,
              "name": "DreamTicket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1202,
              "src": "87:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DreamTicket_$1202",
                "typeString": "contract DreamTicket"
              }
            },
            "id": 1375,
            "nodeType": "InheritanceSpecifier",
            "src": "87:11:4"
          }
        ],
        "contractDependencies": [
          1202,
          1370
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1505,
        "linearizedBaseContracts": [
          1505,
          1202,
          1370
        ],
        "name": "SecondDream",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1379,
            "name": "Challenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "indexed": false,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "155:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "149:24:4"
            },
            "src": "134:40:4"
          },
          {
            "constant": false,
            "id": 1384,
            "name": "applicants",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "178:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 1383,
              "keyType": {
                "id": 1380,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "186:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "178:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1381,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "194:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1382,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "194:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1388,
            "name": "seed",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "228:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 1387,
              "keyType": {
                "id": 1385,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "236:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "228:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 1386,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1392,
            "name": "applicantsNum",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "270:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1391,
              "keyType": {
                "id": 1389,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "278:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "270:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1390,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "286:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1396,
            "name": "winner",
            "nodeType": "VariableDeclaration",
            "scope": 1505,
            "src": "318:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1395,
              "keyType": {
                "id": 1393,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "326:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "318:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1394,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "334:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "448:304:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1400,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "462:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1401,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "470:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BUY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "470:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "462:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          },
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1404,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "482:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1405,
                              "name": "Term",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "490:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                                "typeString": "type(enum DreamTicket.Term)"
                              }
                            },
                            "id": 1406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "REVEAL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "490:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Term_$366",
                              "typeString": "enum DreamTicket.Term"
                            }
                          },
                          "src": "482:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "462:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1523,
                        1524
                      ],
                      "referencedDeclaration": 1523,
                      "src": "454:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1410,
                  "nodeType": "ExpressionStatement",
                  "src": "454:48:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1412,
                            "name": "introducers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "516:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1415,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1520,
                              "src": "528:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "528:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "516:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "542:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "516:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1523,
                        1524
                      ],
                      "referencedDeclaration": 1523,
                      "src": "508:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "508:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "573:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "573:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1420,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "550:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1422,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1421,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "561:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "550:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "550:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1427,
                  "nodeType": "ExpressionStatement",
                  "src": "550:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "590:25:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "introducers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "590:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1431,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1429,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "602:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "602:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "590:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1433,
                  "nodeType": "ExpressionStatement",
                  "src": "590:25:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1434,
                        "name": "seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "621:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 1436,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1435,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "626:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "621:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1440,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "662:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 1442,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1441,
                                "name": "round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 397,
                                "src": "667:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "662:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1443,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1520,
                                "src": "675:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "675:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1438,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1507,
                              "src": "645:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "645:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "645:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1437,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1514,
                        "src": "635:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "635:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "621:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "621:66:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "693:22:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "693:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1451,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1450,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "707:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "693:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1453,
                  "nodeType": "ExpressionStatement",
                  "src": "693:22:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1455,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "736:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "736:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1454,
                      "name": "Challenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1379,
                      "src": "726:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "EmitStatement",
                  "src": "721:26:4"
                }
              ]
            },
            "documentation": "It doesn't decide who is winner.",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:2:4"
            },
            "returnParameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:0:4"
            },
            "scope": 1505,
            "src": "412:340:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "820:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1466,
                      "name": "applicants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1384,
                      "src": "833:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(uint256 => address[] storage ref)"
                      }
                    },
                    "id": 1468,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1467,
                      "name": "round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "844:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "833:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1465,
                  "id": 1469,
                  "nodeType": "Return",
                  "src": "826:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 1471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApplicants",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:2:4"
            },
            "returnParameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1464,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1471,
                  "src": "802:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1462,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "802:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1463,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "802:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:18:4"
            },
            "scope": 1505,
            "src": "756:99:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1503,
              "nodeType": "Block",
              "src": "899:152:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Term_$366",
                          "typeString": "enum DreamTicket.Term"
                        },
                        "id": 1478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1475,
                          "name": "term",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "913:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1476,
                            "name": "Term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "921:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Term_$366_$",
                              "typeString": "type(enum DreamTicket.Term)"
                            }
                          },
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RESULT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "921:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Term_$366",
                            "typeString": "enum DreamTicket.Term"
                          }
                        },
                        "src": "913:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1523,
                        1524
                      ],
                      "referencedDeclaration": 1523,
                      "src": "905:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1480,
                  "nodeType": "ExpressionStatement",
                  "src": "905:28:4"
                },
                {
                  "assignments": [
                    1482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1482,
                      "name": "seedIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1503,
                      "src": "939:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "939:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1492,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1484,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "961:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 1486,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1485,
                            "name": "round",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "966:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "961:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "956:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "956:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1488,
                        "name": "applicantsNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "976:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1490,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1489,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "990:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "976:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "956:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "939:57:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1396,
                        "src": "1002:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1495,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "1009:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1002:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1496,
                          "name": "applicants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "1018:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint256 => address[] storage ref)"
                          }
                        },
                        "id": 1498,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1497,
                          "name": "round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "1029:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1018:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1500,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1499,
                        "name": "seedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1482,
                        "src": "1036:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1018:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1002:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:44:4"
                }
              ]
            },
            "documentation": null,
            "id": 1504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drawSecondDreamWinner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:2:4"
            },
            "returnParameters": {
              "id": 1473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:4"
            },
            "scope": 1505,
            "src": "859:192:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1506,
        "src": "63:990:4"
      }
    ],
    "src": "0:1053:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa2E49Efb18a94e02b18b50c23f0F55AF45b14dd1",
      "transactionHash": "0xe344cefc6283eb01b878a6c26c2703f92d61de66a36ffe18cc864269db42350e"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-07-21T14:18:22.963Z",
  "devdoc": {
    "methods": {
      "buy(uint256,uint256)": {
        "params": {
          "_num": "The ticket number (0-4999)",
          "_passcode": "This is necessary to create random (1000-9999)"
        }
      },
      "buyWithIntroducer(uint256,uint256,address)": {
        "params": {
          "_num": "The ticket number (0-4999)",
          "_passcode": "This is necessary to create random (1000-9999)"
        }
      },
      "getNonSelectableNumbers(uint256,uint256)": {
        "params": {
          "_from": "more than equals",
          "_to": "less than equals"
        }
      },
      "getSelectableNumbers(uint256,uint256)": {
        "params": {
          "_from": "more than equals",
          "_to": "less than equals"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "buy(uint256,uint256)": {
        "notice": "A player can buy a ticket but the process still not be end"
      },
      "buyWithIntroducer(uint256,uint256,address)": {
        "notice": "A player can buy a ticket with introducer address"
      },
      "challenge()": {
        "notice": "It doesn't decide who is winner."
      }
    }
  }
}